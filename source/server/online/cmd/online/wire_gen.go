// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"github.com/go-kratos/kratos/v2"
	"github.com/go-kratos/kratos/v2/log"
	"online/internal/biz"
	"online/internal/components/logger"
	"online/internal/components/redis"
	"online/internal/components/registry"
	"online/internal/conf"
	"online/internal/server"
	"online/internal/service"
)

import (
	_ "go.uber.org/automaxprocs"
)

// Injectors from wire.go:

// wireApp init kratos application.
func wireApp(bootstrap *conf.Bootstrap, logLogger log.Logger) (*kratos.App, func(), error) {
	helper := logger.NewHelper(logLogger)
	client, err := registry.NewEtcdClient(bootstrap, helper)
	if err != nil {
		return nil, nil, err
	}
	onlineRegistry := registry.NewOnlineRegistry(bootstrap, client)
	redisRedis := redis.NewRedisClient(bootstrap, helper)
	onlineBiz := biz.NewOnlineBiz(helper, redisRedis)
	onlineService := service.NewOnlineService(helper, onlineBiz)
	grpcServer := server.NewGRPCServer(bootstrap, onlineService, logLogger)
	app := newApp(logLogger, bootstrap, onlineRegistry, grpcServer)
	return app, func() {
	}, nil
}
