// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v3.21.12
// source: v1/relationship/relationship.proto

package relationship

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	universal "user/api/v1/universal"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetFriendsByIDSRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FriendIds []int64 `protobuf:"varint,1,rep,packed,name=friend_ids,json=friendIds,proto3" json:"friend_ids,omitempty"`
}

func (x *GetFriendsByIDSRequest) Reset() {
	*x = GetFriendsByIDSRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_relationship_relationship_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFriendsByIDSRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFriendsByIDSRequest) ProtoMessage() {}

func (x *GetFriendsByIDSRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_relationship_relationship_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFriendsByIDSRequest.ProtoReflect.Descriptor instead.
func (*GetFriendsByIDSRequest) Descriptor() ([]byte, []int) {
	return file_v1_relationship_relationship_proto_rawDescGZIP(), []int{0}
}

func (x *GetFriendsByIDSRequest) GetFriendIds() []int64 {
	if x != nil {
		return x.FriendIds
	}
	return nil
}

type GetFriendsByIDSResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Friends []*universal.Friend `protobuf:"bytes,1,rep,name=friends,proto3" json:"friends,omitempty"`
}

func (x *GetFriendsByIDSResponse) Reset() {
	*x = GetFriendsByIDSResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_relationship_relationship_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFriendsByIDSResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFriendsByIDSResponse) ProtoMessage() {}

func (x *GetFriendsByIDSResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_relationship_relationship_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFriendsByIDSResponse.ProtoReflect.Descriptor instead.
func (*GetFriendsByIDSResponse) Descriptor() ([]byte, []int) {
	return file_v1_relationship_relationship_proto_rawDescGZIP(), []int{1}
}

func (x *GetFriendsByIDSResponse) GetFriends() []*universal.Friend {
	if x != nil {
		return x.Friends
	}
	return nil
}

type GetOneFriendRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId   int64 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	FriendId int64 `protobuf:"varint,2,opt,name=friend_id,json=friendId,proto3" json:"friend_id,omitempty"`
}

func (x *GetOneFriendRequest) Reset() {
	*x = GetOneFriendRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_relationship_relationship_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOneFriendRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOneFriendRequest) ProtoMessage() {}

func (x *GetOneFriendRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_relationship_relationship_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOneFriendRequest.ProtoReflect.Descriptor instead.
func (*GetOneFriendRequest) Descriptor() ([]byte, []int) {
	return file_v1_relationship_relationship_proto_rawDescGZIP(), []int{2}
}

func (x *GetOneFriendRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *GetOneFriendRequest) GetFriendId() int64 {
	if x != nil {
		return x.FriendId
	}
	return 0
}

type GetONeFriendResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Friend *universal.Friend `protobuf:"bytes,1,opt,name=friend,proto3" json:"friend,omitempty"`
}

func (x *GetONeFriendResponse) Reset() {
	*x = GetONeFriendResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_relationship_relationship_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetONeFriendResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetONeFriendResponse) ProtoMessage() {}

func (x *GetONeFriendResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_relationship_relationship_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetONeFriendResponse.ProtoReflect.Descriptor instead.
func (*GetONeFriendResponse) Descriptor() ([]byte, []int) {
	return file_v1_relationship_relationship_proto_rawDescGZIP(), []int{3}
}

func (x *GetONeFriendResponse) GetFriend() *universal.Friend {
	if x != nil {
		return x.Friend
	}
	return nil
}

type SendFriendRequestRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequesterId int64  `protobuf:"varint,1,opt,name=requester_id,json=requesterId,proto3" json:"requester_id,omitempty"`
	ReceiverId  int64  `protobuf:"varint,2,opt,name=receiver_id,json=receiverId,proto3" json:"receiver_id,omitempty"`
	NoteName    string `protobuf:"bytes,3,opt,name=note_name,json=noteName,proto3" json:"note_name,omitempty"`
	Desc        string `protobuf:"bytes,4,opt,name=desc,proto3" json:"desc,omitempty"`
	GroupName   string `protobuf:"bytes,5,opt,name=group_name,json=groupName,proto3" json:"group_name,omitempty"`
}

func (x *SendFriendRequestRequest) Reset() {
	*x = SendFriendRequestRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_relationship_relationship_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendFriendRequestRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendFriendRequestRequest) ProtoMessage() {}

func (x *SendFriendRequestRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_relationship_relationship_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendFriendRequestRequest.ProtoReflect.Descriptor instead.
func (*SendFriendRequestRequest) Descriptor() ([]byte, []int) {
	return file_v1_relationship_relationship_proto_rawDescGZIP(), []int{4}
}

func (x *SendFriendRequestRequest) GetRequesterId() int64 {
	if x != nil {
		return x.RequesterId
	}
	return 0
}

func (x *SendFriendRequestRequest) GetReceiverId() int64 {
	if x != nil {
		return x.ReceiverId
	}
	return 0
}

func (x *SendFriendRequestRequest) GetNoteName() string {
	if x != nil {
		return x.NoteName
	}
	return ""
}

func (x *SendFriendRequestRequest) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *SendFriendRequestRequest) GetGroupName() string {
	if x != nil {
		return x.GroupName
	}
	return ""
}

type SendFriendRequestResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FriendRequest *universal.FriendRequest `protobuf:"bytes,1,opt,name=friend_request,json=friendRequest,proto3" json:"friend_request,omitempty"`
}

func (x *SendFriendRequestResponse) Reset() {
	*x = SendFriendRequestResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_relationship_relationship_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendFriendRequestResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendFriendRequestResponse) ProtoMessage() {}

func (x *SendFriendRequestResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_relationship_relationship_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendFriendRequestResponse.ProtoReflect.Descriptor instead.
func (*SendFriendRequestResponse) Descriptor() ([]byte, []int) {
	return file_v1_relationship_relationship_proto_rawDescGZIP(), []int{5}
}

func (x *SendFriendRequestResponse) GetFriendRequest() *universal.FriendRequest {
	if x != nil {
		return x.FriendRequest
	}
	return nil
}

type GetFriendRequestListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId     int64 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	PageNumber int64 `protobuf:"varint,2,opt,name=page_number,json=pageNumber,proto3" json:"page_number,omitempty"`
	PageSize   int64 `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
}

func (x *GetFriendRequestListRequest) Reset() {
	*x = GetFriendRequestListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_relationship_relationship_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFriendRequestListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFriendRequestListRequest) ProtoMessage() {}

func (x *GetFriendRequestListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_relationship_relationship_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFriendRequestListRequest.ProtoReflect.Descriptor instead.
func (*GetFriendRequestListRequest) Descriptor() ([]byte, []int) {
	return file_v1_relationship_relationship_proto_rawDescGZIP(), []int{6}
}

func (x *GetFriendRequestListRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *GetFriendRequestListRequest) GetPageNumber() int64 {
	if x != nil {
		return x.PageNumber
	}
	return 0
}

func (x *GetFriendRequestListRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type GetFriendRequestListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FriendRequests []*universal.FriendRequest `protobuf:"bytes,1,rep,name=friend_requests,json=friendRequests,proto3" json:"friend_requests,omitempty"`
	Total          int64                      `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *GetFriendRequestListResponse) Reset() {
	*x = GetFriendRequestListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_relationship_relationship_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFriendRequestListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFriendRequestListResponse) ProtoMessage() {}

func (x *GetFriendRequestListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_relationship_relationship_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFriendRequestListResponse.ProtoReflect.Descriptor instead.
func (*GetFriendRequestListResponse) Descriptor() ([]byte, []int) {
	return file_v1_relationship_relationship_proto_rawDescGZIP(), []int{7}
}

func (x *GetFriendRequestListResponse) GetFriendRequests() []*universal.FriendRequest {
	if x != nil {
		return x.FriendRequests
	}
	return nil
}

func (x *GetFriendRequestListResponse) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type GetFriendRequestRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestId int64 `protobuf:"varint,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
}

func (x *GetFriendRequestRequest) Reset() {
	*x = GetFriendRequestRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_relationship_relationship_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFriendRequestRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFriendRequestRequest) ProtoMessage() {}

func (x *GetFriendRequestRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_relationship_relationship_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFriendRequestRequest.ProtoReflect.Descriptor instead.
func (*GetFriendRequestRequest) Descriptor() ([]byte, []int) {
	return file_v1_relationship_relationship_proto_rawDescGZIP(), []int{8}
}

func (x *GetFriendRequestRequest) GetRequestId() int64 {
	if x != nil {
		return x.RequestId
	}
	return 0
}

type GetFriendRequestResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FriendRequest *universal.FriendRequest `protobuf:"bytes,1,opt,name=friend_request,json=friendRequest,proto3" json:"friend_request,omitempty"`
}

func (x *GetFriendRequestResponse) Reset() {
	*x = GetFriendRequestResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_relationship_relationship_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFriendRequestResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFriendRequestResponse) ProtoMessage() {}

func (x *GetFriendRequestResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_relationship_relationship_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFriendRequestResponse.ProtoReflect.Descriptor instead.
func (*GetFriendRequestResponse) Descriptor() ([]byte, []int) {
	return file_v1_relationship_relationship_proto_rawDescGZIP(), []int{9}
}

func (x *GetFriendRequestResponse) GetFriendRequest() *universal.FriendRequest {
	if x != nil {
		return x.FriendRequest
	}
	return nil
}

type GetFriendRequestsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestIds []int64 `protobuf:"varint,1,rep,packed,name=request_ids,json=requestIds,proto3" json:"request_ids,omitempty"`
}

func (x *GetFriendRequestsRequest) Reset() {
	*x = GetFriendRequestsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_relationship_relationship_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFriendRequestsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFriendRequestsRequest) ProtoMessage() {}

func (x *GetFriendRequestsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_relationship_relationship_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFriendRequestsRequest.ProtoReflect.Descriptor instead.
func (*GetFriendRequestsRequest) Descriptor() ([]byte, []int) {
	return file_v1_relationship_relationship_proto_rawDescGZIP(), []int{10}
}

func (x *GetFriendRequestsRequest) GetRequestIds() []int64 {
	if x != nil {
		return x.RequestIds
	}
	return nil
}

type GetFriendRequestsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FriendRequests []*universal.FriendRequest `protobuf:"bytes,1,rep,name=friend_requests,json=friendRequests,proto3" json:"friend_requests,omitempty"`
}

func (x *GetFriendRequestsResponse) Reset() {
	*x = GetFriendRequestsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_relationship_relationship_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFriendRequestsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFriendRequestsResponse) ProtoMessage() {}

func (x *GetFriendRequestsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_relationship_relationship_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFriendRequestsResponse.ProtoReflect.Descriptor instead.
func (*GetFriendRequestsResponse) Descriptor() ([]byte, []int) {
	return file_v1_relationship_relationship_proto_rawDescGZIP(), []int{11}
}

func (x *GetFriendRequestsResponse) GetFriendRequests() []*universal.FriendRequest {
	if x != nil {
		return x.FriendRequests
	}
	return nil
}

type DealFriendRequestRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestId int64  `protobuf:"varint,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	Status    string `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	NoteName  string `protobuf:"bytes,3,opt,name=note_name,json=noteName,proto3" json:"note_name,omitempty"`
	GroupName string `protobuf:"bytes,4,opt,name=group_name,json=groupName,proto3" json:"group_name,omitempty"`
}

func (x *DealFriendRequestRequest) Reset() {
	*x = DealFriendRequestRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_relationship_relationship_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DealFriendRequestRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DealFriendRequestRequest) ProtoMessage() {}

func (x *DealFriendRequestRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_relationship_relationship_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DealFriendRequestRequest.ProtoReflect.Descriptor instead.
func (*DealFriendRequestRequest) Descriptor() ([]byte, []int) {
	return file_v1_relationship_relationship_proto_rawDescGZIP(), []int{12}
}

func (x *DealFriendRequestRequest) GetRequestId() int64 {
	if x != nil {
		return x.RequestId
	}
	return 0
}

func (x *DealFriendRequestRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *DealFriendRequestRequest) GetNoteName() string {
	if x != nil {
		return x.NoteName
	}
	return ""
}

func (x *DealFriendRequestRequest) GetGroupName() string {
	if x != nil {
		return x.GroupName
	}
	return ""
}

type DealFriendRequestResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DealFriendRequestResponse) Reset() {
	*x = DealFriendRequestResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_relationship_relationship_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DealFriendRequestResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DealFriendRequestResponse) ProtoMessage() {}

func (x *DealFriendRequestResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_relationship_relationship_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DealFriendRequestResponse.ProtoReflect.Descriptor instead.
func (*DealFriendRequestResponse) Descriptor() ([]byte, []int) {
	return file_v1_relationship_relationship_proto_rawDescGZIP(), []int{13}
}

type GetFriendListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId int64 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *GetFriendListRequest) Reset() {
	*x = GetFriendListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_relationship_relationship_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFriendListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFriendListRequest) ProtoMessage() {}

func (x *GetFriendListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_relationship_relationship_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFriendListRequest.ProtoReflect.Descriptor instead.
func (*GetFriendListRequest) Descriptor() ([]byte, []int) {
	return file_v1_relationship_relationship_proto_rawDescGZIP(), []int{14}
}

func (x *GetFriendListRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type GetFriendListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Friends []*universal.Friend `protobuf:"bytes,1,rep,name=friends,proto3" json:"friends,omitempty"`
}

func (x *GetFriendListResponse) Reset() {
	*x = GetFriendListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_relationship_relationship_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFriendListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFriendListResponse) ProtoMessage() {}

func (x *GetFriendListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_relationship_relationship_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFriendListResponse.ProtoReflect.Descriptor instead.
func (*GetFriendListResponse) Descriptor() ([]byte, []int) {
	return file_v1_relationship_relationship_proto_rawDescGZIP(), []int{15}
}

func (x *GetFriendListResponse) GetFriends() []*universal.Friend {
	if x != nil {
		return x.Friends
	}
	return nil
}

type DeleteFriendRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId   int64 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	FriendId int64 `protobuf:"varint,2,opt,name=friend_id,json=friendId,proto3" json:"friend_id,omitempty"`
}

func (x *DeleteFriendRequest) Reset() {
	*x = DeleteFriendRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_relationship_relationship_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteFriendRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteFriendRequest) ProtoMessage() {}

func (x *DeleteFriendRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_relationship_relationship_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteFriendRequest.ProtoReflect.Descriptor instead.
func (*DeleteFriendRequest) Descriptor() ([]byte, []int) {
	return file_v1_relationship_relationship_proto_rawDescGZIP(), []int{16}
}

func (x *DeleteFriendRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *DeleteFriendRequest) GetFriendId() int64 {
	if x != nil {
		return x.FriendId
	}
	return 0
}

type DeleteFriendResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteFriendResponse) Reset() {
	*x = DeleteFriendResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_relationship_relationship_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteFriendResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteFriendResponse) ProtoMessage() {}

func (x *DeleteFriendResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_relationship_relationship_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteFriendResponse.ProtoReflect.Descriptor instead.
func (*DeleteFriendResponse) Descriptor() ([]byte, []int) {
	return file_v1_relationship_relationship_proto_rawDescGZIP(), []int{17}
}

type GetFriendInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FriendId int64 `protobuf:"varint,1,opt,name=friend_id,json=friendId,proto3" json:"friend_id,omitempty"`
}

func (x *GetFriendInfoRequest) Reset() {
	*x = GetFriendInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_relationship_relationship_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFriendInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFriendInfoRequest) ProtoMessage() {}

func (x *GetFriendInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_relationship_relationship_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFriendInfoRequest.ProtoReflect.Descriptor instead.
func (*GetFriendInfoRequest) Descriptor() ([]byte, []int) {
	return file_v1_relationship_relationship_proto_rawDescGZIP(), []int{18}
}

func (x *GetFriendInfoRequest) GetFriendId() int64 {
	if x != nil {
		return x.FriendId
	}
	return 0
}

type GetFriendInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CityName     string `protobuf:"bytes,1,opt,name=city_name,json=cityName,proto3" json:"city_name,omitempty"`
	ProvinceName string `protobuf:"bytes,2,opt,name=province_name,json=provinceName,proto3" json:"province_name,omitempty"`
	Desc         string `protobuf:"bytes,3,opt,name=desc,proto3" json:"desc,omitempty"`
	AccountId    string `protobuf:"bytes,4,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
}

func (x *GetFriendInfoResponse) Reset() {
	*x = GetFriendInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_relationship_relationship_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFriendInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFriendInfoResponse) ProtoMessage() {}

func (x *GetFriendInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_relationship_relationship_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFriendInfoResponse.ProtoReflect.Descriptor instead.
func (*GetFriendInfoResponse) Descriptor() ([]byte, []int) {
	return file_v1_relationship_relationship_proto_rawDescGZIP(), []int{19}
}

func (x *GetFriendInfoResponse) GetCityName() string {
	if x != nil {
		return x.CityName
	}
	return ""
}

func (x *GetFriendInfoResponse) GetProvinceName() string {
	if x != nil {
		return x.ProvinceName
	}
	return ""
}

func (x *GetFriendInfoResponse) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *GetFriendInfoResponse) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

type UpdateFriendInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId    int64  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	FriendId  int64  `protobuf:"varint,2,opt,name=friend_id,json=friendId,proto3" json:"friend_id,omitempty"`
	NoteName  string `protobuf:"bytes,3,opt,name=note_name,json=noteName,proto3" json:"note_name,omitempty"`
	GroupName string `protobuf:"bytes,4,opt,name=group_name,json=groupName,proto3" json:"group_name,omitempty"`
}

func (x *UpdateFriendInfoRequest) Reset() {
	*x = UpdateFriendInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_relationship_relationship_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateFriendInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateFriendInfoRequest) ProtoMessage() {}

func (x *UpdateFriendInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_relationship_relationship_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateFriendInfoRequest.ProtoReflect.Descriptor instead.
func (*UpdateFriendInfoRequest) Descriptor() ([]byte, []int) {
	return file_v1_relationship_relationship_proto_rawDescGZIP(), []int{20}
}

func (x *UpdateFriendInfoRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *UpdateFriendInfoRequest) GetFriendId() int64 {
	if x != nil {
		return x.FriendId
	}
	return 0
}

func (x *UpdateFriendInfoRequest) GetNoteName() string {
	if x != nil {
		return x.NoteName
	}
	return ""
}

func (x *UpdateFriendInfoRequest) GetGroupName() string {
	if x != nil {
		return x.GroupName
	}
	return ""
}

type UpdateFriendInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateFriendInfoResponse) Reset() {
	*x = UpdateFriendInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_relationship_relationship_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateFriendInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateFriendInfoResponse) ProtoMessage() {}

func (x *UpdateFriendInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_relationship_relationship_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateFriendInfoResponse.ProtoReflect.Descriptor instead.
func (*UpdateFriendInfoResponse) Descriptor() ([]byte, []int) {
	return file_v1_relationship_relationship_proto_rawDescGZIP(), []int{21}
}

type CreateFriendGroupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId    int64  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	GroupName string `protobuf:"bytes,2,opt,name=group_name,json=groupName,proto3" json:"group_name,omitempty"`
}

func (x *CreateFriendGroupRequest) Reset() {
	*x = CreateFriendGroupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_relationship_relationship_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateFriendGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateFriendGroupRequest) ProtoMessage() {}

func (x *CreateFriendGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_relationship_relationship_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateFriendGroupRequest.ProtoReflect.Descriptor instead.
func (*CreateFriendGroupRequest) Descriptor() ([]byte, []int) {
	return file_v1_relationship_relationship_proto_rawDescGZIP(), []int{22}
}

func (x *CreateFriendGroupRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *CreateFriendGroupRequest) GetGroupName() string {
	if x != nil {
		return x.GroupName
	}
	return ""
}

type CreateFriendGroupResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CreateFriendGroupResponse) Reset() {
	*x = CreateFriendGroupResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_relationship_relationship_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateFriendGroupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateFriendGroupResponse) ProtoMessage() {}

func (x *CreateFriendGroupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_relationship_relationship_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateFriendGroupResponse.ProtoReflect.Descriptor instead.
func (*CreateFriendGroupResponse) Descriptor() ([]byte, []int) {
	return file_v1_relationship_relationship_proto_rawDescGZIP(), []int{23}
}

type UpdateFriendGroupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId       int64  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	GroupName    string `protobuf:"bytes,2,opt,name=group_name,json=groupName,proto3" json:"group_name,omitempty"`
	NewGroupName string `protobuf:"bytes,3,opt,name=new_group_name,json=newGroupName,proto3" json:"new_group_name,omitempty"`
}

func (x *UpdateFriendGroupRequest) Reset() {
	*x = UpdateFriendGroupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_relationship_relationship_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateFriendGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateFriendGroupRequest) ProtoMessage() {}

func (x *UpdateFriendGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_relationship_relationship_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateFriendGroupRequest.ProtoReflect.Descriptor instead.
func (*UpdateFriendGroupRequest) Descriptor() ([]byte, []int) {
	return file_v1_relationship_relationship_proto_rawDescGZIP(), []int{24}
}

func (x *UpdateFriendGroupRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *UpdateFriendGroupRequest) GetGroupName() string {
	if x != nil {
		return x.GroupName
	}
	return ""
}

func (x *UpdateFriendGroupRequest) GetNewGroupName() string {
	if x != nil {
		return x.NewGroupName
	}
	return ""
}

type UpdateFriendGroupResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateFriendGroupResponse) Reset() {
	*x = UpdateFriendGroupResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_relationship_relationship_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateFriendGroupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateFriendGroupResponse) ProtoMessage() {}

func (x *UpdateFriendGroupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_relationship_relationship_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateFriendGroupResponse.ProtoReflect.Descriptor instead.
func (*UpdateFriendGroupResponse) Descriptor() ([]byte, []int) {
	return file_v1_relationship_relationship_proto_rawDescGZIP(), []int{25}
}

type DeleteFriendGroupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId    int64  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	GroupName string `protobuf:"bytes,2,opt,name=group_name,json=groupName,proto3" json:"group_name,omitempty"`
}

func (x *DeleteFriendGroupRequest) Reset() {
	*x = DeleteFriendGroupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_relationship_relationship_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteFriendGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteFriendGroupRequest) ProtoMessage() {}

func (x *DeleteFriendGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_relationship_relationship_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteFriendGroupRequest.ProtoReflect.Descriptor instead.
func (*DeleteFriendGroupRequest) Descriptor() ([]byte, []int) {
	return file_v1_relationship_relationship_proto_rawDescGZIP(), []int{26}
}

func (x *DeleteFriendGroupRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *DeleteFriendGroupRequest) GetGroupName() string {
	if x != nil {
		return x.GroupName
	}
	return ""
}

type DeleteFriendGroupResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteFriendGroupResponse) Reset() {
	*x = DeleteFriendGroupResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_relationship_relationship_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteFriendGroupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteFriendGroupResponse) ProtoMessage() {}

func (x *DeleteFriendGroupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_relationship_relationship_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteFriendGroupResponse.ProtoReflect.Descriptor instead.
func (*DeleteFriendGroupResponse) Descriptor() ([]byte, []int) {
	return file_v1_relationship_relationship_proto_rawDescGZIP(), []int{27}
}

type GetFriendGroupListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId int64 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *GetFriendGroupListRequest) Reset() {
	*x = GetFriendGroupListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_relationship_relationship_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFriendGroupListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFriendGroupListRequest) ProtoMessage() {}

func (x *GetFriendGroupListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_relationship_relationship_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFriendGroupListRequest.ProtoReflect.Descriptor instead.
func (*GetFriendGroupListRequest) Descriptor() ([]byte, []int) {
	return file_v1_relationship_relationship_proto_rawDescGZIP(), []int{28}
}

func (x *GetFriendGroupListRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type GetFriendGroupListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupNames []string `protobuf:"bytes,1,rep,name=group_names,json=groupNames,proto3" json:"group_names,omitempty"`
}

func (x *GetFriendGroupListResponse) Reset() {
	*x = GetFriendGroupListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_relationship_relationship_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFriendGroupListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFriendGroupListResponse) ProtoMessage() {}

func (x *GetFriendGroupListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_relationship_relationship_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFriendGroupListResponse.ProtoReflect.Descriptor instead.
func (*GetFriendGroupListResponse) Descriptor() ([]byte, []int) {
	return file_v1_relationship_relationship_proto_rawDescGZIP(), []int{29}
}

func (x *GetFriendGroupListResponse) GetGroupNames() []string {
	if x != nil {
		return x.GroupNames
	}
	return nil
}

// 群组
type CreateGroupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupName     string `protobuf:"bytes,1,opt,name=group_name,json=groupName,proto3" json:"group_name,omitempty"`
	GroupAvatar   string `protobuf:"bytes,2,opt,name=group_avatar,json=groupAvatar,proto3" json:"group_avatar,omitempty"`
	GroupDesc     string `protobuf:"bytes,3,opt,name=group_desc,json=groupDesc,proto3" json:"group_desc,omitempty"`
	GroupLeaderId int64  `protobuf:"varint,4,opt,name=group_leader_id,json=groupLeaderId,proto3" json:"group_leader_id,omitempty"`
}

func (x *CreateGroupRequest) Reset() {
	*x = CreateGroupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_relationship_relationship_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateGroupRequest) ProtoMessage() {}

func (x *CreateGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_relationship_relationship_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateGroupRequest.ProtoReflect.Descriptor instead.
func (*CreateGroupRequest) Descriptor() ([]byte, []int) {
	return file_v1_relationship_relationship_proto_rawDescGZIP(), []int{30}
}

func (x *CreateGroupRequest) GetGroupName() string {
	if x != nil {
		return x.GroupName
	}
	return ""
}

func (x *CreateGroupRequest) GetGroupAvatar() string {
	if x != nil {
		return x.GroupAvatar
	}
	return ""
}

func (x *CreateGroupRequest) GetGroupDesc() string {
	if x != nil {
		return x.GroupDesc
	}
	return ""
}

func (x *CreateGroupRequest) GetGroupLeaderId() int64 {
	if x != nil {
		return x.GroupLeaderId
	}
	return 0
}

type CreateGroupResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Group *universal.Group `protobuf:"bytes,1,opt,name=group,proto3" json:"group,omitempty"`
}

func (x *CreateGroupResponse) Reset() {
	*x = CreateGroupResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_relationship_relationship_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateGroupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateGroupResponse) ProtoMessage() {}

func (x *CreateGroupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_relationship_relationship_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateGroupResponse.ProtoReflect.Descriptor instead.
func (*CreateGroupResponse) Descriptor() ([]byte, []int) {
	return file_v1_relationship_relationship_proto_rawDescGZIP(), []int{31}
}

func (x *CreateGroupResponse) GetGroup() *universal.Group {
	if x != nil {
		return x.Group
	}
	return nil
}

type GetGroupListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId int64 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *GetGroupListRequest) Reset() {
	*x = GetGroupListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_relationship_relationship_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGroupListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGroupListRequest) ProtoMessage() {}

func (x *GetGroupListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_relationship_relationship_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGroupListRequest.ProtoReflect.Descriptor instead.
func (*GetGroupListRequest) Descriptor() ([]byte, []int) {
	return file_v1_relationship_relationship_proto_rawDescGZIP(), []int{32}
}

func (x *GetGroupListRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type GetGroupListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Groups []*universal.Group `protobuf:"bytes,1,rep,name=groups,proto3" json:"groups,omitempty"`
}

func (x *GetGroupListResponse) Reset() {
	*x = GetGroupListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_relationship_relationship_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGroupListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGroupListResponse) ProtoMessage() {}

func (x *GetGroupListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_relationship_relationship_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGroupListResponse.ProtoReflect.Descriptor instead.
func (*GetGroupListResponse) Descriptor() ([]byte, []int) {
	return file_v1_relationship_relationship_proto_rawDescGZIP(), []int{33}
}

func (x *GetGroupListResponse) GetGroups() []*universal.Group {
	if x != nil {
		return x.Groups
	}
	return nil
}

type GetGroupInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupId string `protobuf:"bytes,1,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
}

func (x *GetGroupInfoRequest) Reset() {
	*x = GetGroupInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_relationship_relationship_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGroupInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGroupInfoRequest) ProtoMessage() {}

func (x *GetGroupInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_relationship_relationship_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGroupInfoRequest.ProtoReflect.Descriptor instead.
func (*GetGroupInfoRequest) Descriptor() ([]byte, []int) {
	return file_v1_relationship_relationship_proto_rawDescGZIP(), []int{34}
}

func (x *GetGroupInfoRequest) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

type GetGroupInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Group *universal.Group `protobuf:"bytes,1,opt,name=group,proto3" json:"group,omitempty"`
}

func (x *GetGroupInfoResponse) Reset() {
	*x = GetGroupInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_relationship_relationship_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGroupInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGroupInfoResponse) ProtoMessage() {}

func (x *GetGroupInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_relationship_relationship_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGroupInfoResponse.ProtoReflect.Descriptor instead.
func (*GetGroupInfoResponse) Descriptor() ([]byte, []int) {
	return file_v1_relationship_relationship_proto_rawDescGZIP(), []int{35}
}

func (x *GetGroupInfoResponse) GetGroup() *universal.Group {
	if x != nil {
		return x.Group
	}
	return nil
}

type UpdateGroupInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupId     string `protobuf:"bytes,1,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	GroupName   string `protobuf:"bytes,2,opt,name=group_name,json=groupName,proto3" json:"group_name,omitempty"`
	GroupAvatar string `protobuf:"bytes,3,opt,name=group_avatar,json=groupAvatar,proto3" json:"group_avatar,omitempty"`
	GroupDesc   string `protobuf:"bytes,4,opt,name=group_desc,json=groupDesc,proto3" json:"group_desc,omitempty"`
}

func (x *UpdateGroupInfoRequest) Reset() {
	*x = UpdateGroupInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_relationship_relationship_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateGroupInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateGroupInfoRequest) ProtoMessage() {}

func (x *UpdateGroupInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_relationship_relationship_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateGroupInfoRequest.ProtoReflect.Descriptor instead.
func (*UpdateGroupInfoRequest) Descriptor() ([]byte, []int) {
	return file_v1_relationship_relationship_proto_rawDescGZIP(), []int{36}
}

func (x *UpdateGroupInfoRequest) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *UpdateGroupInfoRequest) GetGroupName() string {
	if x != nil {
		return x.GroupName
	}
	return ""
}

func (x *UpdateGroupInfoRequest) GetGroupAvatar() string {
	if x != nil {
		return x.GroupAvatar
	}
	return ""
}

func (x *UpdateGroupInfoRequest) GetGroupDesc() string {
	if x != nil {
		return x.GroupDesc
	}
	return ""
}

type UpdateGroupInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateGroupInfoResponse) Reset() {
	*x = UpdateGroupInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_relationship_relationship_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateGroupInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateGroupInfoResponse) ProtoMessage() {}

func (x *UpdateGroupInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_relationship_relationship_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateGroupInfoResponse.ProtoReflect.Descriptor instead.
func (*UpdateGroupInfoResponse) Descriptor() ([]byte, []int) {
	return file_v1_relationship_relationship_proto_rawDescGZIP(), []int{37}
}

type DeleteGroupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupId string `protobuf:"bytes,1,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	UserId  int64  `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *DeleteGroupRequest) Reset() {
	*x = DeleteGroupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_relationship_relationship_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteGroupRequest) ProtoMessage() {}

func (x *DeleteGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_relationship_relationship_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteGroupRequest.ProtoReflect.Descriptor instead.
func (*DeleteGroupRequest) Descriptor() ([]byte, []int) {
	return file_v1_relationship_relationship_proto_rawDescGZIP(), []int{38}
}

func (x *DeleteGroupRequest) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *DeleteGroupRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type DeleteGroupResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteGroupResponse) Reset() {
	*x = DeleteGroupResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_relationship_relationship_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteGroupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteGroupResponse) ProtoMessage() {}

func (x *DeleteGroupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_relationship_relationship_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteGroupResponse.ProtoReflect.Descriptor instead.
func (*DeleteGroupResponse) Descriptor() ([]byte, []int) {
	return file_v1_relationship_relationship_proto_rawDescGZIP(), []int{39}
}

type GetGroupMemberListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupId string `protobuf:"bytes,1,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
}

func (x *GetGroupMemberListRequest) Reset() {
	*x = GetGroupMemberListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_relationship_relationship_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGroupMemberListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGroupMemberListRequest) ProtoMessage() {}

func (x *GetGroupMemberListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_relationship_relationship_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGroupMemberListRequest.ProtoReflect.Descriptor instead.
func (*GetGroupMemberListRequest) Descriptor() ([]byte, []int) {
	return file_v1_relationship_relationship_proto_rawDescGZIP(), []int{40}
}

func (x *GetGroupMemberListRequest) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

type GetGroupMemberListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupMembers []*universal.GroupMember `protobuf:"bytes,1,rep,name=group_members,json=groupMembers,proto3" json:"group_members,omitempty"`
}

func (x *GetGroupMemberListResponse) Reset() {
	*x = GetGroupMemberListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_relationship_relationship_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGroupMemberListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGroupMemberListResponse) ProtoMessage() {}

func (x *GetGroupMemberListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_relationship_relationship_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGroupMemberListResponse.ProtoReflect.Descriptor instead.
func (*GetGroupMemberListResponse) Descriptor() ([]byte, []int) {
	return file_v1_relationship_relationship_proto_rawDescGZIP(), []int{41}
}

func (x *GetGroupMemberListResponse) GetGroupMembers() []*universal.GroupMember {
	if x != nil {
		return x.GroupMembers
	}
	return nil
}

type GetGroupMemberInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupId string `protobuf:"bytes,1,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	UserId  int64  `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *GetGroupMemberInfoRequest) Reset() {
	*x = GetGroupMemberInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_relationship_relationship_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGroupMemberInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGroupMemberInfoRequest) ProtoMessage() {}

func (x *GetGroupMemberInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_relationship_relationship_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGroupMemberInfoRequest.ProtoReflect.Descriptor instead.
func (*GetGroupMemberInfoRequest) Descriptor() ([]byte, []int) {
	return file_v1_relationship_relationship_proto_rawDescGZIP(), []int{42}
}

func (x *GetGroupMemberInfoRequest) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *GetGroupMemberInfoRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type GetGroupMemberInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupMember *universal.GroupMember `protobuf:"bytes,1,opt,name=group_member,json=groupMember,proto3" json:"group_member,omitempty"`
}

func (x *GetGroupMemberInfoResponse) Reset() {
	*x = GetGroupMemberInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_relationship_relationship_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGroupMemberInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGroupMemberInfoResponse) ProtoMessage() {}

func (x *GetGroupMemberInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_relationship_relationship_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGroupMemberInfoResponse.ProtoReflect.Descriptor instead.
func (*GetGroupMemberInfoResponse) Descriptor() ([]byte, []int) {
	return file_v1_relationship_relationship_proto_rawDescGZIP(), []int{43}
}

func (x *GetGroupMemberInfoResponse) GetGroupMember() *universal.GroupMember {
	if x != nil {
		return x.GroupMember
	}
	return nil
}

type UpdateGroupMemberInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupId        string `protobuf:"bytes,1,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	UserId         int64  `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	MemberNoteName string `protobuf:"bytes,3,opt,name=member_note_name,json=memberNoteName,proto3" json:"member_note_name,omitempty"`
	GroupNoteName  string `protobuf:"bytes,4,opt,name=group_note_name,json=groupNoteName,proto3" json:"group_note_name,omitempty"`
}

func (x *UpdateGroupMemberInfoRequest) Reset() {
	*x = UpdateGroupMemberInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_relationship_relationship_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateGroupMemberInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateGroupMemberInfoRequest) ProtoMessage() {}

func (x *UpdateGroupMemberInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_relationship_relationship_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateGroupMemberInfoRequest.ProtoReflect.Descriptor instead.
func (*UpdateGroupMemberInfoRequest) Descriptor() ([]byte, []int) {
	return file_v1_relationship_relationship_proto_rawDescGZIP(), []int{44}
}

func (x *UpdateGroupMemberInfoRequest) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *UpdateGroupMemberInfoRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *UpdateGroupMemberInfoRequest) GetMemberNoteName() string {
	if x != nil {
		return x.MemberNoteName
	}
	return ""
}

func (x *UpdateGroupMemberInfoRequest) GetGroupNoteName() string {
	if x != nil {
		return x.GroupNoteName
	}
	return ""
}

type UpdateGroupMemberInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateGroupMemberInfoResponse) Reset() {
	*x = UpdateGroupMemberInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_relationship_relationship_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateGroupMemberInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateGroupMemberInfoResponse) ProtoMessage() {}

func (x *UpdateGroupMemberInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_relationship_relationship_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateGroupMemberInfoResponse.ProtoReflect.Descriptor instead.
func (*UpdateGroupMemberInfoResponse) Descriptor() ([]byte, []int) {
	return file_v1_relationship_relationship_proto_rawDescGZIP(), []int{45}
}

type DeleteGroupMemberRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupId string `protobuf:"bytes,1,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	UserId  int64  `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	AdminId int64  `protobuf:"varint,3,opt,name=admin_id,json=adminId,proto3" json:"admin_id,omitempty"`
}

func (x *DeleteGroupMemberRequest) Reset() {
	*x = DeleteGroupMemberRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_relationship_relationship_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteGroupMemberRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteGroupMemberRequest) ProtoMessage() {}

func (x *DeleteGroupMemberRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_relationship_relationship_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteGroupMemberRequest.ProtoReflect.Descriptor instead.
func (*DeleteGroupMemberRequest) Descriptor() ([]byte, []int) {
	return file_v1_relationship_relationship_proto_rawDescGZIP(), []int{46}
}

func (x *DeleteGroupMemberRequest) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *DeleteGroupMemberRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *DeleteGroupMemberRequest) GetAdminId() int64 {
	if x != nil {
		return x.AdminId
	}
	return 0
}

type DeleteGroupMemberResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteGroupMemberResponse) Reset() {
	*x = DeleteGroupMemberResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_relationship_relationship_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteGroupMemberResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteGroupMemberResponse) ProtoMessage() {}

func (x *DeleteGroupMemberResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_relationship_relationship_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteGroupMemberResponse.ProtoReflect.Descriptor instead.
func (*DeleteGroupMemberResponse) Descriptor() ([]byte, []int) {
	return file_v1_relationship_relationship_proto_rawDescGZIP(), []int{47}
}

type SendGroupRequestRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequesterId int64  `protobuf:"varint,1,opt,name=requester_id,json=requesterId,proto3" json:"requester_id,omitempty"`
	GroupId     string `protobuf:"bytes,2,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	Desc        string `protobuf:"bytes,3,opt,name=desc,proto3" json:"desc,omitempty"`
}

func (x *SendGroupRequestRequest) Reset() {
	*x = SendGroupRequestRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_relationship_relationship_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendGroupRequestRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendGroupRequestRequest) ProtoMessage() {}

func (x *SendGroupRequestRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_relationship_relationship_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendGroupRequestRequest.ProtoReflect.Descriptor instead.
func (*SendGroupRequestRequest) Descriptor() ([]byte, []int) {
	return file_v1_relationship_relationship_proto_rawDescGZIP(), []int{48}
}

func (x *SendGroupRequestRequest) GetRequesterId() int64 {
	if x != nil {
		return x.RequesterId
	}
	return 0
}

func (x *SendGroupRequestRequest) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *SendGroupRequestRequest) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

type SendGroupRequestResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupRequest *universal.GroupRequest `protobuf:"bytes,1,opt,name=group_request,json=groupRequest,proto3" json:"group_request,omitempty"`
}

func (x *SendGroupRequestResponse) Reset() {
	*x = SendGroupRequestResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_relationship_relationship_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendGroupRequestResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendGroupRequestResponse) ProtoMessage() {}

func (x *SendGroupRequestResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_relationship_relationship_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendGroupRequestResponse.ProtoReflect.Descriptor instead.
func (*SendGroupRequestResponse) Descriptor() ([]byte, []int) {
	return file_v1_relationship_relationship_proto_rawDescGZIP(), []int{49}
}

func (x *SendGroupRequestResponse) GetGroupRequest() *universal.GroupRequest {
	if x != nil {
		return x.GroupRequest
	}
	return nil
}

type GetGroupRequestListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupId string `protobuf:"bytes,1,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
}

func (x *GetGroupRequestListRequest) Reset() {
	*x = GetGroupRequestListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_relationship_relationship_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGroupRequestListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGroupRequestListRequest) ProtoMessage() {}

func (x *GetGroupRequestListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_relationship_relationship_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGroupRequestListRequest.ProtoReflect.Descriptor instead.
func (*GetGroupRequestListRequest) Descriptor() ([]byte, []int) {
	return file_v1_relationship_relationship_proto_rawDescGZIP(), []int{50}
}

func (x *GetGroupRequestListRequest) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

type GetGroupRequestListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupRequests []*universal.GroupRequest `protobuf:"bytes,1,rep,name=group_requests,json=groupRequests,proto3" json:"group_requests,omitempty"`
}

func (x *GetGroupRequestListResponse) Reset() {
	*x = GetGroupRequestListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_relationship_relationship_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGroupRequestListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGroupRequestListResponse) ProtoMessage() {}

func (x *GetGroupRequestListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_relationship_relationship_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGroupRequestListResponse.ProtoReflect.Descriptor instead.
func (*GetGroupRequestListResponse) Descriptor() ([]byte, []int) {
	return file_v1_relationship_relationship_proto_rawDescGZIP(), []int{51}
}

func (x *GetGroupRequestListResponse) GetGroupRequests() []*universal.GroupRequest {
	if x != nil {
		return x.GroupRequests
	}
	return nil
}

type GetGroupRequestRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestId int64 `protobuf:"varint,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
}

func (x *GetGroupRequestRequest) Reset() {
	*x = GetGroupRequestRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_relationship_relationship_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGroupRequestRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGroupRequestRequest) ProtoMessage() {}

func (x *GetGroupRequestRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_relationship_relationship_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGroupRequestRequest.ProtoReflect.Descriptor instead.
func (*GetGroupRequestRequest) Descriptor() ([]byte, []int) {
	return file_v1_relationship_relationship_proto_rawDescGZIP(), []int{52}
}

func (x *GetGroupRequestRequest) GetRequestId() int64 {
	if x != nil {
		return x.RequestId
	}
	return 0
}

type GetGroupRequestResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupRequest *universal.GroupRequest `protobuf:"bytes,1,opt,name=group_request,json=groupRequest,proto3" json:"group_request,omitempty"`
}

func (x *GetGroupRequestResponse) Reset() {
	*x = GetGroupRequestResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_relationship_relationship_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGroupRequestResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGroupRequestResponse) ProtoMessage() {}

func (x *GetGroupRequestResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_relationship_relationship_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGroupRequestResponse.ProtoReflect.Descriptor instead.
func (*GetGroupRequestResponse) Descriptor() ([]byte, []int) {
	return file_v1_relationship_relationship_proto_rawDescGZIP(), []int{53}
}

func (x *GetGroupRequestResponse) GetGroupRequest() *universal.GroupRequest {
	if x != nil {
		return x.GroupRequest
	}
	return nil
}

type GetGroupRequestsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestIds []int64 `protobuf:"varint,1,rep,packed,name=request_ids,json=requestIds,proto3" json:"request_ids,omitempty"`
}

func (x *GetGroupRequestsRequest) Reset() {
	*x = GetGroupRequestsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_relationship_relationship_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGroupRequestsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGroupRequestsRequest) ProtoMessage() {}

func (x *GetGroupRequestsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_relationship_relationship_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGroupRequestsRequest.ProtoReflect.Descriptor instead.
func (*GetGroupRequestsRequest) Descriptor() ([]byte, []int) {
	return file_v1_relationship_relationship_proto_rawDescGZIP(), []int{54}
}

func (x *GetGroupRequestsRequest) GetRequestIds() []int64 {
	if x != nil {
		return x.RequestIds
	}
	return nil
}

type GetGroupRequestsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupRequests []*universal.GroupRequest `protobuf:"bytes,1,rep,name=group_requests,json=groupRequests,proto3" json:"group_requests,omitempty"`
}

func (x *GetGroupRequestsResponse) Reset() {
	*x = GetGroupRequestsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_relationship_relationship_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGroupRequestsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGroupRequestsResponse) ProtoMessage() {}

func (x *GetGroupRequestsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_relationship_relationship_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGroupRequestsResponse.ProtoReflect.Descriptor instead.
func (*GetGroupRequestsResponse) Descriptor() ([]byte, []int) {
	return file_v1_relationship_relationship_proto_rawDescGZIP(), []int{55}
}

func (x *GetGroupRequestsResponse) GetGroupRequests() []*universal.GroupRequest {
	if x != nil {
		return x.GroupRequests
	}
	return nil
}

type DealGroupRequestRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestId int64  `protobuf:"varint,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	Status    string `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *DealGroupRequestRequest) Reset() {
	*x = DealGroupRequestRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_relationship_relationship_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DealGroupRequestRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DealGroupRequestRequest) ProtoMessage() {}

func (x *DealGroupRequestRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_relationship_relationship_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DealGroupRequestRequest.ProtoReflect.Descriptor instead.
func (*DealGroupRequestRequest) Descriptor() ([]byte, []int) {
	return file_v1_relationship_relationship_proto_rawDescGZIP(), []int{56}
}

func (x *DealGroupRequestRequest) GetRequestId() int64 {
	if x != nil {
		return x.RequestId
	}
	return 0
}

func (x *DealGroupRequestRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type DealGroupRequestResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DealGroupRequestResponse) Reset() {
	*x = DealGroupRequestResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_relationship_relationship_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DealGroupRequestResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DealGroupRequestResponse) ProtoMessage() {}

func (x *DealGroupRequestResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_relationship_relationship_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DealGroupRequestResponse.ProtoReflect.Descriptor instead.
func (*DealGroupRequestResponse) Descriptor() ([]byte, []int) {
	return file_v1_relationship_relationship_proto_rawDescGZIP(), []int{57}
}

type CreateGroupAdminRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupId string `protobuf:"bytes,1,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	UserId  int64  `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *CreateGroupAdminRequest) Reset() {
	*x = CreateGroupAdminRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_relationship_relationship_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateGroupAdminRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateGroupAdminRequest) ProtoMessage() {}

func (x *CreateGroupAdminRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_relationship_relationship_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateGroupAdminRequest.ProtoReflect.Descriptor instead.
func (*CreateGroupAdminRequest) Descriptor() ([]byte, []int) {
	return file_v1_relationship_relationship_proto_rawDescGZIP(), []int{58}
}

func (x *CreateGroupAdminRequest) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *CreateGroupAdminRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type CreateGroupAdminResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CreateGroupAdminResponse) Reset() {
	*x = CreateGroupAdminResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_relationship_relationship_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateGroupAdminResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateGroupAdminResponse) ProtoMessage() {}

func (x *CreateGroupAdminResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_relationship_relationship_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateGroupAdminResponse.ProtoReflect.Descriptor instead.
func (*CreateGroupAdminResponse) Descriptor() ([]byte, []int) {
	return file_v1_relationship_relationship_proto_rawDescGZIP(), []int{59}
}

type DeleteGroupAdminRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupId string `protobuf:"bytes,1,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	UserId  int64  `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *DeleteGroupAdminRequest) Reset() {
	*x = DeleteGroupAdminRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_relationship_relationship_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteGroupAdminRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteGroupAdminRequest) ProtoMessage() {}

func (x *DeleteGroupAdminRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_relationship_relationship_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteGroupAdminRequest.ProtoReflect.Descriptor instead.
func (*DeleteGroupAdminRequest) Descriptor() ([]byte, []int) {
	return file_v1_relationship_relationship_proto_rawDescGZIP(), []int{60}
}

func (x *DeleteGroupAdminRequest) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *DeleteGroupAdminRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type DeleteGroupAdminResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteGroupAdminResponse) Reset() {
	*x = DeleteGroupAdminResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_relationship_relationship_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteGroupAdminResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteGroupAdminResponse) ProtoMessage() {}

func (x *DeleteGroupAdminResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_relationship_relationship_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteGroupAdminResponse.ProtoReflect.Descriptor instead.
func (*DeleteGroupAdminResponse) Descriptor() ([]byte, []int) {
	return file_v1_relationship_relationship_proto_rawDescGZIP(), []int{61}
}

type GetGroupAdminListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupId string `protobuf:"bytes,1,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
}

func (x *GetGroupAdminListRequest) Reset() {
	*x = GetGroupAdminListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_relationship_relationship_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGroupAdminListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGroupAdminListRequest) ProtoMessage() {}

func (x *GetGroupAdminListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_relationship_relationship_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGroupAdminListRequest.ProtoReflect.Descriptor instead.
func (*GetGroupAdminListRequest) Descriptor() ([]byte, []int) {
	return file_v1_relationship_relationship_proto_rawDescGZIP(), []int{62}
}

func (x *GetGroupAdminListRequest) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

type GetGroupAdminListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupAdmins []*universal.GroupMember `protobuf:"bytes,1,rep,name=group_admins,json=groupAdmins,proto3" json:"group_admins,omitempty"`
}

func (x *GetGroupAdminListResponse) Reset() {
	*x = GetGroupAdminListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_relationship_relationship_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGroupAdminListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGroupAdminListResponse) ProtoMessage() {}

func (x *GetGroupAdminListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_relationship_relationship_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGroupAdminListResponse.ProtoReflect.Descriptor instead.
func (*GetGroupAdminListResponse) Descriptor() ([]byte, []int) {
	return file_v1_relationship_relationship_proto_rawDescGZIP(), []int{63}
}

func (x *GetGroupAdminListResponse) GetGroupAdmins() []*universal.GroupMember {
	if x != nil {
		return x.GroupAdmins
	}
	return nil
}

type GetGroupAdminInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupId string `protobuf:"bytes,1,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	UserId  int64  `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *GetGroupAdminInfoRequest) Reset() {
	*x = GetGroupAdminInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_relationship_relationship_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGroupAdminInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGroupAdminInfoRequest) ProtoMessage() {}

func (x *GetGroupAdminInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_relationship_relationship_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGroupAdminInfoRequest.ProtoReflect.Descriptor instead.
func (*GetGroupAdminInfoRequest) Descriptor() ([]byte, []int) {
	return file_v1_relationship_relationship_proto_rawDescGZIP(), []int{64}
}

func (x *GetGroupAdminInfoRequest) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *GetGroupAdminInfoRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type GetGroupAdminInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupAdmin *universal.GroupMember `protobuf:"bytes,1,opt,name=group_admin,json=groupAdmin,proto3" json:"group_admin,omitempty"`
}

func (x *GetGroupAdminInfoResponse) Reset() {
	*x = GetGroupAdminInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_relationship_relationship_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGroupAdminInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGroupAdminInfoResponse) ProtoMessage() {}

func (x *GetGroupAdminInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_relationship_relationship_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGroupAdminInfoResponse.ProtoReflect.Descriptor instead.
func (*GetGroupAdminInfoResponse) Descriptor() ([]byte, []int) {
	return file_v1_relationship_relationship_proto_rawDescGZIP(), []int{65}
}

func (x *GetGroupAdminInfoResponse) GetGroupAdmin() *universal.GroupMember {
	if x != nil {
		return x.GroupAdmin
	}
	return nil
}

type CheckAdminRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupId string `protobuf:"bytes,1,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	UserId  int64  `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *CheckAdminRequest) Reset() {
	*x = CheckAdminRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_relationship_relationship_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckAdminRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckAdminRequest) ProtoMessage() {}

func (x *CheckAdminRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_relationship_relationship_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckAdminRequest.ProtoReflect.Descriptor instead.
func (*CheckAdminRequest) Descriptor() ([]byte, []int) {
	return file_v1_relationship_relationship_proto_rawDescGZIP(), []int{66}
}

func (x *CheckAdminRequest) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *CheckAdminRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type CheckAdminResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsAdmin bool `protobuf:"varint,1,opt,name=is_admin,json=isAdmin,proto3" json:"is_admin,omitempty"`
}

func (x *CheckAdminResponse) Reset() {
	*x = CheckAdminResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_relationship_relationship_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckAdminResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckAdminResponse) ProtoMessage() {}

func (x *CheckAdminResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_relationship_relationship_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckAdminResponse.ProtoReflect.Descriptor instead.
func (*CheckAdminResponse) Descriptor() ([]byte, []int) {
	return file_v1_relationship_relationship_proto_rawDescGZIP(), []int{67}
}

func (x *CheckAdminResponse) GetIsAdmin() bool {
	if x != nil {
		return x.IsAdmin
	}
	return false
}

type GetGroupMemberRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupId string `protobuf:"bytes,1,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	UserId  int64  `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *GetGroupMemberRequest) Reset() {
	*x = GetGroupMemberRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_relationship_relationship_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGroupMemberRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGroupMemberRequest) ProtoMessage() {}

func (x *GetGroupMemberRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_relationship_relationship_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGroupMemberRequest.ProtoReflect.Descriptor instead.
func (*GetGroupMemberRequest) Descriptor() ([]byte, []int) {
	return file_v1_relationship_relationship_proto_rawDescGZIP(), []int{68}
}

func (x *GetGroupMemberRequest) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *GetGroupMemberRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type CheckLeaderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupId string `protobuf:"bytes,1,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	UserId  int64  `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *CheckLeaderRequest) Reset() {
	*x = CheckLeaderRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_relationship_relationship_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckLeaderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckLeaderRequest) ProtoMessage() {}

func (x *CheckLeaderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_relationship_relationship_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckLeaderRequest.ProtoReflect.Descriptor instead.
func (*CheckLeaderRequest) Descriptor() ([]byte, []int) {
	return file_v1_relationship_relationship_proto_rawDescGZIP(), []int{69}
}

func (x *CheckLeaderRequest) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *CheckLeaderRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type CheckLeaderResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsLeader bool `protobuf:"varint,1,opt,name=is_leader,json=isLeader,proto3" json:"is_leader,omitempty"`
}

func (x *CheckLeaderResponse) Reset() {
	*x = CheckLeaderResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_relationship_relationship_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckLeaderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckLeaderResponse) ProtoMessage() {}

func (x *CheckLeaderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_relationship_relationship_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckLeaderResponse.ProtoReflect.Descriptor instead.
func (*CheckLeaderResponse) Descriptor() ([]byte, []int) {
	return file_v1_relationship_relationship_proto_rawDescGZIP(), []int{70}
}

func (x *CheckLeaderResponse) GetIsLeader() bool {
	if x != nil {
		return x.IsLeader
	}
	return false
}

type CheckMemberRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupId string `protobuf:"bytes,1,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	UserId  int64  `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *CheckMemberRequest) Reset() {
	*x = CheckMemberRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_relationship_relationship_proto_msgTypes[71]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckMemberRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckMemberRequest) ProtoMessage() {}

func (x *CheckMemberRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_relationship_relationship_proto_msgTypes[71]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckMemberRequest.ProtoReflect.Descriptor instead.
func (*CheckMemberRequest) Descriptor() ([]byte, []int) {
	return file_v1_relationship_relationship_proto_rawDescGZIP(), []int{71}
}

func (x *CheckMemberRequest) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *CheckMemberRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type CheckMemberResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsMember bool `protobuf:"varint,1,opt,name=is_member,json=isMember,proto3" json:"is_member,omitempty"`
}

func (x *CheckMemberResponse) Reset() {
	*x = CheckMemberResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_relationship_relationship_proto_msgTypes[72]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckMemberResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckMemberResponse) ProtoMessage() {}

func (x *CheckMemberResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_relationship_relationship_proto_msgTypes[72]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckMemberResponse.ProtoReflect.Descriptor instead.
func (*CheckMemberResponse) Descriptor() ([]byte, []int) {
	return file_v1_relationship_relationship_proto_rawDescGZIP(), []int{72}
}

func (x *CheckMemberResponse) GetIsMember() bool {
	if x != nil {
		return x.IsMember
	}
	return false
}

var File_v1_relationship_relationship_proto protoreflect.FileDescriptor

var file_v1_relationship_relationship_proto_rawDesc = []byte{
	0x0a, 0x22, 0x76, 0x31, 0x2f, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x68, 0x69,
	0x70, 0x2f, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x68, 0x69, 0x70, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x19, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x6c, 0x6f, 0x67,
	0x69, 0x63, 0x2e, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x68, 0x69, 0x70, 0x1a,
	0x1c, 0x76, 0x31, 0x2f, 0x75, 0x6e, 0x69, 0x76, 0x65, 0x72, 0x73, 0x61, 0x6c, 0x2f, 0x75, 0x6e,
	0x69, 0x76, 0x65, 0x72, 0x73, 0x61, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x76,
	0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x37, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x46, 0x72, 0x69,
	0x65, 0x6e, 0x64, 0x73, 0x42, 0x79, 0x49, 0x44, 0x53, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x03, 0x52, 0x09, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x49, 0x64, 0x73, 0x22,
	0x4d, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x42, 0x79, 0x49,
	0x44, 0x53, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a, 0x07, 0x66, 0x72,
	0x69, 0x65, 0x6e, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x76, 0x31, 0x2e, 0x75, 0x6e, 0x69, 0x76, 0x65, 0x72, 0x73, 0x61, 0x6c, 0x2e, 0x46,
	0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x07, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x22, 0x4b,
	0x0a, 0x13, 0x47, 0x65, 0x74, 0x4f, 0x6e, 0x65, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1b,
	0x0a, 0x09, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x08, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x49, 0x64, 0x22, 0x48, 0x0a, 0x14, 0x47,
	0x65, 0x74, 0x4f, 0x4e, 0x65, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x30, 0x0a, 0x06, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x75, 0x6e, 0x69,
	0x76, 0x65, 0x72, 0x73, 0x61, 0x6c, 0x2e, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x06, 0x66,
	0x72, 0x69, 0x65, 0x6e, 0x64, 0x22, 0xcd, 0x01, 0x0a, 0x18, 0x53, 0x65, 0x6e, 0x64, 0x46, 0x72,
	0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x72, 0x65, 0x63, 0x65,
	0x69, 0x76, 0x65, 0x72, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x09, 0x6e, 0x6f, 0x74, 0x65, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xfa, 0x42, 0x06, 0x72, 0x04,
	0x10, 0x01, 0x18, 0x0a, 0x52, 0x08, 0x6e, 0x6f, 0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b,
	0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42,
	0x04, 0x72, 0x02, 0x18, 0x32, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x28, 0x0a, 0x0a, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x09, 0xfa, 0x42, 0x06, 0x72, 0x04, 0x10, 0x01, 0x18, 0x0a, 0x52, 0x09, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x63, 0x0a, 0x19, 0x53, 0x65, 0x6e, 0x64, 0x46, 0x72, 0x69,
	0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x46, 0x0a, 0x0e, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x5f, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x76, 0x31, 0x2e, 0x75, 0x6e, 0x69, 0x76, 0x65, 0x72, 0x73, 0x61, 0x6c, 0x2e, 0x46, 0x72,
	0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x0d, 0x66, 0x72, 0x69,
	0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x86, 0x01, 0x0a, 0x1b, 0x47,
	0x65, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x0b, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x22, 0x02, 0x20,
	0x00, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x24, 0x0a,
	0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x42, 0x07, 0xfa, 0x42, 0x04, 0x22, 0x02, 0x10, 0x64, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53,
	0x69, 0x7a, 0x65, 0x22, 0x7e, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x48, 0x0a, 0x0f, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x5f, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x75, 0x6e, 0x69, 0x76, 0x65, 0x72, 0x73, 0x61, 0x6c, 0x2e,
	0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x0e, 0x66,
	0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x22, 0x38, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d,
	0x0a, 0x0a, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x22, 0x62, 0x0a,
	0x18, 0x47, 0x65, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x46, 0x0a, 0x0e, 0x66, 0x72, 0x69,
	0x65, 0x6e, 0x64, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x75, 0x6e, 0x69, 0x76, 0x65,
	0x72, 0x73, 0x61, 0x6c, 0x2e, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x52, 0x0d, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x22, 0x3b, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a,
	0x0b, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x03, 0x52, 0x0a, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x73, 0x22, 0x65,
	0x0a, 0x19, 0x47, 0x65, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x48, 0x0a, 0x0f, 0x66,
	0x72, 0x69, 0x65, 0x6e, 0x64, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x75, 0x6e,
	0x69, 0x76, 0x65, 0x72, 0x73, 0x61, 0x6c, 0x2e, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x0e, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x73, 0x22, 0xaf, 0x01, 0x0a, 0x18, 0x44, 0x65, 0x61, 0x6c, 0x46, 0x72,
	0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49,
	0x64, 0x12, 0x22, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x52, 0x03, 0x31, 0x2c, 0x32, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x26, 0x0a, 0x09, 0x6e, 0x6f, 0x74, 0x65, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xfa, 0x42, 0x06, 0x72, 0x04, 0x10,
	0x01, 0x18, 0x0a, 0x52, 0x08, 0x6e, 0x6f, 0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x28, 0x0a,
	0x0a, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x09, 0xfa, 0x42, 0x06, 0x72, 0x04, 0x10, 0x01, 0x18, 0x0a, 0x52, 0x09, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x1b, 0x0a, 0x19, 0x44, 0x65, 0x61, 0x6c, 0x46,
	0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2f, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e,
	0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x4b, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x46, 0x72, 0x69, 0x65,
	0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32,
	0x0a, 0x07, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x18, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x75, 0x6e, 0x69, 0x76, 0x65, 0x72, 0x73,
	0x61, 0x6c, 0x2e, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x07, 0x66, 0x72, 0x69, 0x65, 0x6e,
	0x64, 0x73, 0x22, 0x4b, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x72, 0x69, 0x65,
	0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x49, 0x64, 0x22,
	0x16, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x33, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x46, 0x72,
	0x69, 0x65, 0x6e, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1b, 0x0a, 0x09, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x08, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x49, 0x64, 0x22, 0x8c, 0x01, 0x0a,
	0x15, 0x47, 0x65, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x69, 0x74, 0x79, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x69, 0x74, 0x79, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x76,
	0x69, 0x6e, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x1d, 0x0a, 0x0a,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x22, 0xa1, 0x01, 0x0a, 0x17,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x1b, 0x0a, 0x09, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x49, 0x64, 0x12, 0x26, 0x0a,
	0x09, 0x6e, 0x6f, 0x74, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x09, 0xfa, 0x42, 0x06, 0x72, 0x04, 0x10, 0x01, 0x18, 0x0a, 0x52, 0x08, 0x6e, 0x6f, 0x74,
	0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x0a, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xfa, 0x42, 0x06, 0x72, 0x04,
	0x10, 0x01, 0x18, 0x0a, 0x52, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x22,
	0x1a, 0x0a, 0x18, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x5d, 0x0a, 0x18, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x28, 0x0a, 0x0a, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xfa, 0x42, 0x06, 0x72, 0x04, 0x10, 0x01, 0x18, 0x0a, 0x52,
	0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x1b, 0x0a, 0x19, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x8e, 0x01, 0x0a, 0x18, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x28, 0x0a,
	0x0a, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x09, 0xfa, 0x42, 0x06, 0x72, 0x04, 0x10, 0x01, 0x18, 0x0a, 0x52, 0x09, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2f, 0x0a, 0x0e, 0x6e, 0x65, 0x77, 0x5f, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x09, 0xfa, 0x42, 0x06, 0x72, 0x04, 0x10, 0x01, 0x18, 0x0a, 0x52, 0x0c, 0x6e, 0x65, 0x77, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x1b, 0x0a, 0x19, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x5d, 0x0a, 0x18, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46,
	0x72, 0x69, 0x65, 0x6e, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x0a, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09,
	0xfa, 0x42, 0x06, 0x72, 0x04, 0x10, 0x01, 0x18, 0x0a, 0x52, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x4e, 0x61, 0x6d, 0x65, 0x22, 0x1b, 0x0a, 0x19, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x72,
	0x69, 0x65, 0x6e, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x34, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17,
	0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x3d, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x46, 0x72,
	0x69, 0x65, 0x6e, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x22, 0xbf, 0x01, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x28, 0x0a,
	0x0a, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x09, 0xfa, 0x42, 0x06, 0x72, 0x04, 0x10, 0x01, 0x18, 0x0a, 0x52, 0x09, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2d, 0x0a, 0x0c, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x5f, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa,
	0x42, 0x07, 0x72, 0x05, 0x10, 0x01, 0x18, 0xff, 0x01, 0x52, 0x0b, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x28, 0x0a, 0x0a, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f,
	0x64, 0x65, 0x73, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xfa, 0x42, 0x06, 0x72,
	0x04, 0x10, 0x01, 0x18, 0x64, 0x52, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x44, 0x65, 0x73, 0x63,
	0x12, 0x26, 0x0a, 0x0f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x6c, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x49, 0x64, 0x22, 0x44, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x2d, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x75, 0x6e, 0x69, 0x76, 0x65, 0x72, 0x73, 0x61,
	0x6c, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x22, 0x2e,
	0x0a, 0x13, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x47,
	0x0a, 0x14, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x06, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e,
	0x75, 0x6e, 0x69, 0x76, 0x65, 0x72, 0x73, 0x61, 0x6c, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52,
	0x06, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x22, 0x3b, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24,
	0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x09, 0xfa, 0x42, 0x06, 0x72, 0x04, 0x10, 0x0a, 0x18, 0x0d, 0x52, 0x07, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x49, 0x64, 0x22, 0x45, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2d, 0x0a, 0x05,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x76, 0x31, 0x2e, 0x75, 0x6e, 0x69, 0x76, 0x65, 0x72, 0x73, 0x61, 0x6c, 0x2e, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x52, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x22, 0xc1, 0x01, 0x0a, 0x16,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xfa, 0x42, 0x06, 0x72, 0x04, 0x10,
	0x0a, 0x18, 0x0d, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x0a,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x09, 0xfa, 0x42, 0x06, 0x72, 0x04, 0x10, 0x01, 0x18, 0x0a, 0x52, 0x09, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2d, 0x0a, 0x0c, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f,
	0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42,
	0x07, 0x72, 0x05, 0x10, 0x01, 0x18, 0xff, 0x01, 0x52, 0x0b, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x41,
	0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x28, 0x0a, 0x0a, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x64,
	0x65, 0x73, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xfa, 0x42, 0x06, 0x72, 0x04,
	0x10, 0x01, 0x18, 0x64, 0x52, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x44, 0x65, 0x73, 0x63, 0x22,
	0x19, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x53, 0x0a, 0x12, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x24, 0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x09, 0xfa, 0x42, 0x06, 0x72, 0x04, 0x10, 0x0a, 0x18, 0x0d, 0x52, 0x07, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22,
	0x15, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x41, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xfa, 0x42, 0x06, 0x72, 0x04, 0x10, 0x0a, 0x18, 0x0d,
	0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x22, 0x60, 0x0a, 0x1a, 0x47, 0x65, 0x74,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x42, 0x0a, 0x0d, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x5f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x75, 0x6e, 0x69, 0x76, 0x65, 0x72, 0x73, 0x61,
	0x6c, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x0c, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x22, 0x5a, 0x0a, 0x19, 0x47,
	0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xfa, 0x42, 0x06, 0x72,
	0x04, 0x10, 0x0a, 0x18, 0x0d, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x17,
	0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x5e, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a, 0x0c, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x6d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x76, 0x31, 0x2e, 0x75, 0x6e, 0x69, 0x76, 0x65, 0x72, 0x73, 0x61, 0x6c, 0x2e, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x0b, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x22, 0xc5, 0x01, 0x0a, 0x1c, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xfa, 0x42, 0x06, 0x72,
	0x04, 0x10, 0x0a, 0x18, 0x0d, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x17,
	0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x33, 0x0a, 0x10, 0x6d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x5f, 0x6e, 0x6f, 0x74, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x09, 0xfa, 0x42, 0x06, 0x72, 0x04, 0x10, 0x01, 0x18, 0x0a, 0x52, 0x0e, 0x6d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x4e, 0x6f, 0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x31, 0x0a, 0x0f,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x6e, 0x6f, 0x74, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xfa, 0x42, 0x06, 0x72, 0x04, 0x10, 0x01, 0x18, 0x0a,
	0x52, 0x0d, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x6f, 0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22,
	0x1f, 0x0a, 0x1d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x74, 0x0a, 0x18, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x08,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09,
	0xfa, 0x42, 0x06, 0x72, 0x04, 0x10, 0x0a, 0x18, 0x0d, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x61,
	0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x61,
	0x64, 0x6d, 0x69, 0x6e, 0x49, 0x64, 0x22, 0x1b, 0x0a, 0x19, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x81, 0x01, 0x0a, 0x17, 0x53, 0x65, 0x6e, 0x64, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x21, 0x0a, 0x0c, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x24, 0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xfa, 0x42, 0x06, 0x72, 0x04, 0x10, 0x0a, 0x18, 0x0d, 0x52,
	0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xfa, 0x42, 0x06, 0x72, 0x04, 0x10, 0x01, 0x18,
	0x64, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x22, 0x5f, 0x0a, 0x18, 0x53, 0x65, 0x6e, 0x64, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x43, 0x0a, 0x0d, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x76, 0x31, 0x2e, 0x75, 0x6e, 0x69, 0x76, 0x65, 0x72, 0x73, 0x61, 0x6c, 0x2e, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x0c, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x42, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xfa, 0x42, 0x06, 0x72, 0x04, 0x10,
	0x0a, 0x18, 0x0d, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x22, 0x64, 0x0a, 0x1b,
	0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x45, 0x0a, 0x0e, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x75, 0x6e, 0x69,
	0x76, 0x65, 0x72, 0x73, 0x61, 0x6c, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x52, 0x0d, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x73, 0x22, 0x37, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x22, 0x5e, 0x0a, 0x17, 0x47,
	0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x43, 0x0a, 0x0d, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x75, 0x6e, 0x69, 0x76, 0x65, 0x72, 0x73, 0x61, 0x6c,
	0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x0c, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x3a, 0x0a, 0x17, 0x47,
	0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x0a, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x73, 0x22, 0x61, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x45, 0x0a, 0x0e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x76, 0x31, 0x2e, 0x75, 0x6e, 0x69, 0x76, 0x65, 0x72, 0x73, 0x61, 0x6c, 0x2e, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x0d, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x22, 0x5c, 0x0a, 0x17, 0x44, 0x65,
	0x61, 0x6c, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x52, 0x03, 0x31, 0x2c, 0x32,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x1a, 0x0a, 0x18, 0x44, 0x65, 0x61, 0x6c,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x58, 0x0a, 0x17, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x24, 0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x09, 0xfa, 0x42, 0x06, 0x72, 0x04, 0x10, 0x0a, 0x18, 0x0d, 0x52, 0x07, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x1a,
	0x0a, 0x18, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x64, 0x6d,
	0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x58, 0x0a, 0x17, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xfa, 0x42, 0x06, 0x72, 0x04, 0x10, 0x0a,
	0x18, 0x0d, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x22, 0x1a, 0x0a, 0x18, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x40, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x64, 0x6d, 0x69,
	0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x08,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09,
	0xfa, 0x42, 0x06, 0x72, 0x04, 0x10, 0x0a, 0x18, 0x0d, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x49, 0x64, 0x22, 0x5d, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x64,
	0x6d, 0x69, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x40, 0x0a, 0x0c, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x75,
	0x6e, 0x69, 0x76, 0x65, 0x72, 0x73, 0x61, 0x6c, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x52, 0x0b, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x64, 0x6d, 0x69, 0x6e,
	0x73, 0x22, 0x59, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x64, 0x6d,
	0x69, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a,
	0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x09, 0xfa, 0x42, 0x06, 0x72, 0x04, 0x10, 0x0a, 0x18, 0x0d, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x5b, 0x0a, 0x19,
	0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3e, 0x0a, 0x0b, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x75, 0x6e, 0x69, 0x76, 0x65, 0x72, 0x73, 0x61,
	0x6c, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x0a, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x22, 0x52, 0x0a, 0x11, 0x43, 0x68, 0x65,
	0x63, 0x6b, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24,
	0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x09, 0xfa, 0x42, 0x06, 0x72, 0x04, 0x10, 0x0a, 0x18, 0x0d, 0x52, 0x07, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x2f, 0x0a,
	0x12, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x73, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x22, 0x56,
	0x0a, 0x15, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xfa, 0x42, 0x06, 0x72, 0x04,
	0x10, 0x0a, 0x18, 0x0d, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x17, 0x0a,
	0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x53, 0x0a, 0x12, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x4c,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x08,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09,
	0xfa, 0x42, 0x06, 0x72, 0x04, 0x10, 0x0a, 0x18, 0x0d, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x32, 0x0a, 0x13, 0x43,
	0x68, 0x65, 0x63, 0x6b, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x6c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x22,
	0x53, 0x0a, 0x12, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xfa, 0x42, 0x06, 0x72, 0x04, 0x10, 0x0a,
	0x18, 0x0d, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x22, 0x32, 0x0a, 0x13, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x69,
	0x73, 0x5f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08,
	0x69, 0x73, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x32, 0xb1, 0x23, 0x0a, 0x0c, 0x72, 0x65, 0x6c,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x68, 0x69, 0x70, 0x12, 0x80, 0x01, 0x0a, 0x11, 0x53, 0x65,
	0x6e, 0x64, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x33, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x2e, 0x72,
	0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x68, 0x69, 0x70, 0x2e, 0x53, 0x65, 0x6e, 0x64,
	0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x34, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x6c, 0x6f,
	0x67, 0x69, 0x63, 0x2e, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x68, 0x69, 0x70,
	0x2e, 0x53, 0x65, 0x6e, 0x64, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x89, 0x01, 0x0a,
	0x14, 0x47, 0x65, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x36, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x6c,
	0x6f, 0x67, 0x69, 0x63, 0x2e, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x68, 0x69,
	0x70, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x37, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x2e, 0x72, 0x65, 0x6c,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x68, 0x69, 0x70, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x72, 0x69,
	0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x7d, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x46,
	0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x32, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x2e, 0x72, 0x65, 0x6c, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x68, 0x69, 0x70, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x72, 0x69, 0x65,
	0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x33, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x2e,
	0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x68, 0x69, 0x70, 0x2e, 0x47, 0x65, 0x74,
	0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x80, 0x01, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x46,
	0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x12, 0x33, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x2e, 0x72, 0x65, 0x6c,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x68, 0x69, 0x70, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x72, 0x69,
	0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x34, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x6c, 0x6f, 0x67, 0x69,
	0x63, 0x2e, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x68, 0x69, 0x70, 0x2e, 0x47,
	0x65, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x80, 0x01, 0x0a, 0x11, 0x44,
	0x65, 0x61, 0x6c, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x33, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x2e,
	0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x68, 0x69, 0x70, 0x2e, 0x44, 0x65, 0x61,
	0x6c, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x34, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x6c,
	0x6f, 0x67, 0x69, 0x63, 0x2e, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x68, 0x69,
	0x70, 0x2e, 0x44, 0x65, 0x61, 0x6c, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x74, 0x0a,
	0x0d, 0x47, 0x65, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2f,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x2e, 0x72, 0x65,
	0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x68, 0x69, 0x70, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x72,
	0x69, 0x65, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x30, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x2e, 0x72,
	0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x68, 0x69, 0x70, 0x2e, 0x47, 0x65, 0x74, 0x46,
	0x72, 0x69, 0x65, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x71, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x4f, 0x6e, 0x65, 0x46, 0x72, 0x69,
	0x65, 0x6e, 0x64, 0x12, 0x2e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x6c, 0x6f, 0x67,
	0x69, 0x63, 0x2e, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x68, 0x69, 0x70, 0x2e,
	0x47, 0x65, 0x74, 0x4f, 0x6e, 0x65, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x6c, 0x6f, 0x67,
	0x69, 0x63, 0x2e, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x68, 0x69, 0x70, 0x2e,
	0x47, 0x65, 0x74, 0x4f, 0x4e, 0x65, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x7a, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x46, 0x72, 0x69,
	0x65, 0x6e, 0x64, 0x73, 0x42, 0x79, 0x49, 0x44, 0x53, 0x12, 0x31, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x76, 0x31, 0x2e, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x2e, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x68, 0x69, 0x70, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73,
	0x42, 0x79, 0x49, 0x44, 0x53, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x2e, 0x72, 0x65, 0x6c, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x68, 0x69, 0x70, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x72, 0x69, 0x65,
	0x6e, 0x64, 0x73, 0x42, 0x79, 0x49, 0x44, 0x53, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x71, 0x0a, 0x0c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x72, 0x69, 0x65,
	0x6e, 0x64, 0x12, 0x2e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x6c, 0x6f, 0x67, 0x69,
	0x63, 0x2e, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x68, 0x69, 0x70, 0x2e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x6c, 0x6f, 0x67, 0x69,
	0x63, 0x2e, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x68, 0x69, 0x70, 0x2e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x74, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x46, 0x72, 0x69, 0x65,
	0x6e, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x2f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e,
	0x6c, 0x6f, 0x67, 0x69, 0x63, 0x2e, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x68,
	0x69, 0x70, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31,
	0x2e, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x2e, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x68, 0x69, 0x70, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x7d, 0x0a, 0x10, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x32, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x2e, 0x72,
	0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x68, 0x69, 0x70, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x33, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x6c, 0x6f, 0x67,
	0x69, 0x63, 0x2e, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x68, 0x69, 0x70, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x80, 0x01, 0x0a, 0x11, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x12, 0x33, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x2e,
	0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x68, 0x69, 0x70, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x34, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x6c,
	0x6f, 0x67, 0x69, 0x63, 0x2e, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x68, 0x69,
	0x70, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x80, 0x01,
	0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x12, 0x33, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x6c, 0x6f, 0x67,
	0x69, 0x63, 0x2e, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x68, 0x69, 0x70, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x34, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76,
	0x31, 0x2e, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x2e, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x68, 0x69, 0x70, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x72, 0x69, 0x65, 0x6e,
	0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x80, 0x01, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x72, 0x69, 0x65, 0x6e,
	0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x33, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e,
	0x6c, 0x6f, 0x67, 0x69, 0x63, 0x2e, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x68,
	0x69, 0x70, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x34, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x76, 0x31, 0x2e, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x2e, 0x72, 0x65, 0x6c, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x68, 0x69, 0x70, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x72,
	0x69, 0x65, 0x6e, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x83, 0x01, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e,
	0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x34, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x76, 0x31, 0x2e, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x2e, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x68, 0x69, 0x70, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x35, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x2e,
	0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x68, 0x69, 0x70, 0x2e, 0x47, 0x65, 0x74,
	0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6e, 0x0a, 0x0b, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x2d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76,
	0x31, 0x2e, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x2e, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x68, 0x69, 0x70, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31,
	0x2e, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x2e, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x68, 0x69, 0x70, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x71, 0x0a, 0x0c, 0x47, 0x65, 0x74,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2e, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x76, 0x31, 0x2e, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x2e, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x68, 0x69, 0x70, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x76, 0x31, 0x2e, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x2e, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x68, 0x69, 0x70, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x71, 0x0a, 0x0c,
	0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x2e, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x2e, 0x72, 0x65, 0x6c, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x68, 0x69, 0x70, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x2e, 0x72, 0x65, 0x6c, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x68, 0x69, 0x70, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x7a, 0x0a, 0x0f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x31, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x6c, 0x6f, 0x67, 0x69,
	0x63, 0x2e, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x68, 0x69, 0x70, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x6c,
	0x6f, 0x67, 0x69, 0x63, 0x2e, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x68, 0x69,
	0x70, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6e, 0x0a, 0x0b, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x2d, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x76, 0x31, 0x2e, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x2e, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x68, 0x69, 0x70, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x76, 0x31, 0x2e, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x2e, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x68, 0x69, 0x70, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x83, 0x01, 0x0a, 0x12,
	0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x34, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x6c, 0x6f, 0x67, 0x69,
	0x63, 0x2e, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x68, 0x69, 0x70, 0x2e, 0x47,
	0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x35, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76,
	0x31, 0x2e, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x2e, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x68, 0x69, 0x70, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x83, 0x01, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x34, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76,
	0x31, 0x2e, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x2e, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x68, 0x69, 0x70, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x35,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x2e, 0x72, 0x65,
	0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x68, 0x69, 0x70, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x8c, 0x01, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x37, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x6c, 0x6f, 0x67, 0x69, 0x63,
	0x2e, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x68, 0x69, 0x70, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x38, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x76, 0x31, 0x2e, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x2e, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x68, 0x69, 0x70, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x80, 0x01, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x33, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x2e, 0x72, 0x65, 0x6c, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x68, 0x69, 0x70, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x34, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x6c, 0x6f, 0x67, 0x69, 0x63,
	0x2e, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x68, 0x69, 0x70, 0x2e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x7d, 0x0a, 0x10, 0x53, 0x65, 0x6e,
	0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x32, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x2e, 0x72, 0x65, 0x6c,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x68, 0x69, 0x70, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x33, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x6c, 0x6f, 0x67, 0x69, 0x63,
	0x2e, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x68, 0x69, 0x70, 0x2e, 0x53, 0x65,
	0x6e, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x86, 0x01, 0x0a, 0x13, 0x47, 0x65, 0x74,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x35, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x2e,
	0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x68, 0x69, 0x70, 0x2e, 0x47, 0x65, 0x74,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x36, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31,
	0x2e, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x2e, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x68, 0x69, 0x70, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x7a, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x31, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x6c, 0x6f,
	0x67, 0x69, 0x63, 0x2e, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x68, 0x69, 0x70,
	0x2e, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31,
	0x2e, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x2e, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x68, 0x69, 0x70, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x7d, 0x0a,
	0x10, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x73, 0x12, 0x32, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x6c, 0x6f, 0x67, 0x69, 0x63,
	0x2e, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x68, 0x69, 0x70, 0x2e, 0x47, 0x65,
	0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x33, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x6c,
	0x6f, 0x67, 0x69, 0x63, 0x2e, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x68, 0x69,
	0x70, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x7d, 0x0a, 0x10,
	0x44, 0x65, 0x61, 0x6c, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x32, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x2e,
	0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x68, 0x69, 0x70, 0x2e, 0x44, 0x65, 0x61,
	0x6c, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x33, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x6c, 0x6f,
	0x67, 0x69, 0x63, 0x2e, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x68, 0x69, 0x70,
	0x2e, 0x44, 0x65, 0x61, 0x6c, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x7d, 0x0a, 0x10, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x12,
	0x32, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x2e, 0x72,
	0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x68, 0x69, 0x70, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x33, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x6c, 0x6f, 0x67,
	0x69, 0x63, 0x2e, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x68, 0x69, 0x70, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x64, 0x6d, 0x69, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x7d, 0x0a, 0x10, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x12, 0x32,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x2e, 0x72, 0x65,
	0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x68, 0x69, 0x70, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x33, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x6c, 0x6f, 0x67, 0x69,
	0x63, 0x2e, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x68, 0x69, 0x70, 0x2e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x80, 0x01, 0x0a, 0x11, 0x47, 0x65,
	0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x33, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x2e, 0x72,
	0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x68, 0x69, 0x70, 0x2e, 0x47, 0x65, 0x74, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x34, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x6c, 0x6f,
	0x67, 0x69, 0x63, 0x2e, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x68, 0x69, 0x70,
	0x2e, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x80, 0x01, 0x0a,
	0x11, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x33, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x6c, 0x6f, 0x67, 0x69,
	0x63, 0x2e, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x68, 0x69, 0x70, 0x2e, 0x47,
	0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x34, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31,
	0x2e, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x2e, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x68, 0x69, 0x70, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x64, 0x6d, 0x69,
	0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x6b, 0x0a, 0x0a, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x12, 0x2c, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x2e, 0x72, 0x65, 0x6c,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x68, 0x69, 0x70, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x41,
	0x64, 0x6d, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x76, 0x31, 0x2e, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x2e, 0x72, 0x65, 0x6c, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x68, 0x69, 0x70, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x41, 0x64, 0x6d,
	0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6e, 0x0a, 0x0b,
	0x43, 0x68, 0x65, 0x63, 0x6b, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x2d, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x76, 0x31, 0x2e, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x2e, 0x72, 0x65, 0x6c, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x68, 0x69, 0x70, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x4c, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x76, 0x31, 0x2e, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x2e, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x68, 0x69, 0x70, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x4c, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6e, 0x0a, 0x0b,
	0x43, 0x68, 0x65, 0x63, 0x6b, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x2d, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x76, 0x31, 0x2e, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x2e, 0x72, 0x65, 0x6c, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x68, 0x69, 0x70, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x76, 0x31, 0x2e, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x2e, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x68, 0x69, 0x70, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x24, 0x5a, 0x22,
	0x2e, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x68, 0x69, 0x70, 0x3b, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x68,
	0x69, 0x70, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_v1_relationship_relationship_proto_rawDescOnce sync.Once
	file_v1_relationship_relationship_proto_rawDescData = file_v1_relationship_relationship_proto_rawDesc
)

func file_v1_relationship_relationship_proto_rawDescGZIP() []byte {
	file_v1_relationship_relationship_proto_rawDescOnce.Do(func() {
		file_v1_relationship_relationship_proto_rawDescData = protoimpl.X.CompressGZIP(file_v1_relationship_relationship_proto_rawDescData)
	})
	return file_v1_relationship_relationship_proto_rawDescData
}

var file_v1_relationship_relationship_proto_msgTypes = make([]protoimpl.MessageInfo, 73)
var file_v1_relationship_relationship_proto_goTypes = []interface{}{
	(*GetFriendsByIDSRequest)(nil),        // 0: api.v1.logic.relationship.GetFriendsByIDSRequest
	(*GetFriendsByIDSResponse)(nil),       // 1: api.v1.logic.relationship.GetFriendsByIDSResponse
	(*GetOneFriendRequest)(nil),           // 2: api.v1.logic.relationship.GetOneFriendRequest
	(*GetONeFriendResponse)(nil),          // 3: api.v1.logic.relationship.GetONeFriendResponse
	(*SendFriendRequestRequest)(nil),      // 4: api.v1.logic.relationship.SendFriendRequestRequest
	(*SendFriendRequestResponse)(nil),     // 5: api.v1.logic.relationship.SendFriendRequestResponse
	(*GetFriendRequestListRequest)(nil),   // 6: api.v1.logic.relationship.GetFriendRequestListRequest
	(*GetFriendRequestListResponse)(nil),  // 7: api.v1.logic.relationship.GetFriendRequestListResponse
	(*GetFriendRequestRequest)(nil),       // 8: api.v1.logic.relationship.GetFriendRequestRequest
	(*GetFriendRequestResponse)(nil),      // 9: api.v1.logic.relationship.GetFriendRequestResponse
	(*GetFriendRequestsRequest)(nil),      // 10: api.v1.logic.relationship.GetFriendRequestsRequest
	(*GetFriendRequestsResponse)(nil),     // 11: api.v1.logic.relationship.GetFriendRequestsResponse
	(*DealFriendRequestRequest)(nil),      // 12: api.v1.logic.relationship.DealFriendRequestRequest
	(*DealFriendRequestResponse)(nil),     // 13: api.v1.logic.relationship.DealFriendRequestResponse
	(*GetFriendListRequest)(nil),          // 14: api.v1.logic.relationship.GetFriendListRequest
	(*GetFriendListResponse)(nil),         // 15: api.v1.logic.relationship.GetFriendListResponse
	(*DeleteFriendRequest)(nil),           // 16: api.v1.logic.relationship.DeleteFriendRequest
	(*DeleteFriendResponse)(nil),          // 17: api.v1.logic.relationship.DeleteFriendResponse
	(*GetFriendInfoRequest)(nil),          // 18: api.v1.logic.relationship.GetFriendInfoRequest
	(*GetFriendInfoResponse)(nil),         // 19: api.v1.logic.relationship.GetFriendInfoResponse
	(*UpdateFriendInfoRequest)(nil),       // 20: api.v1.logic.relationship.UpdateFriendInfoRequest
	(*UpdateFriendInfoResponse)(nil),      // 21: api.v1.logic.relationship.UpdateFriendInfoResponse
	(*CreateFriendGroupRequest)(nil),      // 22: api.v1.logic.relationship.CreateFriendGroupRequest
	(*CreateFriendGroupResponse)(nil),     // 23: api.v1.logic.relationship.CreateFriendGroupResponse
	(*UpdateFriendGroupRequest)(nil),      // 24: api.v1.logic.relationship.UpdateFriendGroupRequest
	(*UpdateFriendGroupResponse)(nil),     // 25: api.v1.logic.relationship.UpdateFriendGroupResponse
	(*DeleteFriendGroupRequest)(nil),      // 26: api.v1.logic.relationship.DeleteFriendGroupRequest
	(*DeleteFriendGroupResponse)(nil),     // 27: api.v1.logic.relationship.DeleteFriendGroupResponse
	(*GetFriendGroupListRequest)(nil),     // 28: api.v1.logic.relationship.GetFriendGroupListRequest
	(*GetFriendGroupListResponse)(nil),    // 29: api.v1.logic.relationship.GetFriendGroupListResponse
	(*CreateGroupRequest)(nil),            // 30: api.v1.logic.relationship.CreateGroupRequest
	(*CreateGroupResponse)(nil),           // 31: api.v1.logic.relationship.CreateGroupResponse
	(*GetGroupListRequest)(nil),           // 32: api.v1.logic.relationship.GetGroupListRequest
	(*GetGroupListResponse)(nil),          // 33: api.v1.logic.relationship.GetGroupListResponse
	(*GetGroupInfoRequest)(nil),           // 34: api.v1.logic.relationship.GetGroupInfoRequest
	(*GetGroupInfoResponse)(nil),          // 35: api.v1.logic.relationship.GetGroupInfoResponse
	(*UpdateGroupInfoRequest)(nil),        // 36: api.v1.logic.relationship.UpdateGroupInfoRequest
	(*UpdateGroupInfoResponse)(nil),       // 37: api.v1.logic.relationship.UpdateGroupInfoResponse
	(*DeleteGroupRequest)(nil),            // 38: api.v1.logic.relationship.DeleteGroupRequest
	(*DeleteGroupResponse)(nil),           // 39: api.v1.logic.relationship.DeleteGroupResponse
	(*GetGroupMemberListRequest)(nil),     // 40: api.v1.logic.relationship.GetGroupMemberListRequest
	(*GetGroupMemberListResponse)(nil),    // 41: api.v1.logic.relationship.GetGroupMemberListResponse
	(*GetGroupMemberInfoRequest)(nil),     // 42: api.v1.logic.relationship.GetGroupMemberInfoRequest
	(*GetGroupMemberInfoResponse)(nil),    // 43: api.v1.logic.relationship.GetGroupMemberInfoResponse
	(*UpdateGroupMemberInfoRequest)(nil),  // 44: api.v1.logic.relationship.UpdateGroupMemberInfoRequest
	(*UpdateGroupMemberInfoResponse)(nil), // 45: api.v1.logic.relationship.UpdateGroupMemberInfoResponse
	(*DeleteGroupMemberRequest)(nil),      // 46: api.v1.logic.relationship.DeleteGroupMemberRequest
	(*DeleteGroupMemberResponse)(nil),     // 47: api.v1.logic.relationship.DeleteGroupMemberResponse
	(*SendGroupRequestRequest)(nil),       // 48: api.v1.logic.relationship.SendGroupRequestRequest
	(*SendGroupRequestResponse)(nil),      // 49: api.v1.logic.relationship.SendGroupRequestResponse
	(*GetGroupRequestListRequest)(nil),    // 50: api.v1.logic.relationship.GetGroupRequestListRequest
	(*GetGroupRequestListResponse)(nil),   // 51: api.v1.logic.relationship.GetGroupRequestListResponse
	(*GetGroupRequestRequest)(nil),        // 52: api.v1.logic.relationship.GetGroupRequestRequest
	(*GetGroupRequestResponse)(nil),       // 53: api.v1.logic.relationship.GetGroupRequestResponse
	(*GetGroupRequestsRequest)(nil),       // 54: api.v1.logic.relationship.GetGroupRequestsRequest
	(*GetGroupRequestsResponse)(nil),      // 55: api.v1.logic.relationship.GetGroupRequestsResponse
	(*DealGroupRequestRequest)(nil),       // 56: api.v1.logic.relationship.DealGroupRequestRequest
	(*DealGroupRequestResponse)(nil),      // 57: api.v1.logic.relationship.DealGroupRequestResponse
	(*CreateGroupAdminRequest)(nil),       // 58: api.v1.logic.relationship.CreateGroupAdminRequest
	(*CreateGroupAdminResponse)(nil),      // 59: api.v1.logic.relationship.CreateGroupAdminResponse
	(*DeleteGroupAdminRequest)(nil),       // 60: api.v1.logic.relationship.DeleteGroupAdminRequest
	(*DeleteGroupAdminResponse)(nil),      // 61: api.v1.logic.relationship.DeleteGroupAdminResponse
	(*GetGroupAdminListRequest)(nil),      // 62: api.v1.logic.relationship.GetGroupAdminListRequest
	(*GetGroupAdminListResponse)(nil),     // 63: api.v1.logic.relationship.GetGroupAdminListResponse
	(*GetGroupAdminInfoRequest)(nil),      // 64: api.v1.logic.relationship.GetGroupAdminInfoRequest
	(*GetGroupAdminInfoResponse)(nil),     // 65: api.v1.logic.relationship.GetGroupAdminInfoResponse
	(*CheckAdminRequest)(nil),             // 66: api.v1.logic.relationship.CheckAdminRequest
	(*CheckAdminResponse)(nil),            // 67: api.v1.logic.relationship.CheckAdminResponse
	(*GetGroupMemberRequest)(nil),         // 68: api.v1.logic.relationship.GetGroupMemberRequest
	(*CheckLeaderRequest)(nil),            // 69: api.v1.logic.relationship.CheckLeaderRequest
	(*CheckLeaderResponse)(nil),           // 70: api.v1.logic.relationship.CheckLeaderResponse
	(*CheckMemberRequest)(nil),            // 71: api.v1.logic.relationship.CheckMemberRequest
	(*CheckMemberResponse)(nil),           // 72: api.v1.logic.relationship.CheckMemberResponse
	(*universal.Friend)(nil),              // 73: api.v1.universal.Friend
	(*universal.FriendRequest)(nil),       // 74: api.v1.universal.FriendRequest
	(*universal.Group)(nil),               // 75: api.v1.universal.Group
	(*universal.GroupMember)(nil),         // 76: api.v1.universal.GroupMember
	(*universal.GroupRequest)(nil),        // 77: api.v1.universal.GroupRequest
}
var file_v1_relationship_relationship_proto_depIdxs = []int32{
	73, // 0: api.v1.logic.relationship.GetFriendsByIDSResponse.friends:type_name -> api.v1.universal.Friend
	73, // 1: api.v1.logic.relationship.GetONeFriendResponse.friend:type_name -> api.v1.universal.Friend
	74, // 2: api.v1.logic.relationship.SendFriendRequestResponse.friend_request:type_name -> api.v1.universal.FriendRequest
	74, // 3: api.v1.logic.relationship.GetFriendRequestListResponse.friend_requests:type_name -> api.v1.universal.FriendRequest
	74, // 4: api.v1.logic.relationship.GetFriendRequestResponse.friend_request:type_name -> api.v1.universal.FriendRequest
	74, // 5: api.v1.logic.relationship.GetFriendRequestsResponse.friend_requests:type_name -> api.v1.universal.FriendRequest
	73, // 6: api.v1.logic.relationship.GetFriendListResponse.friends:type_name -> api.v1.universal.Friend
	75, // 7: api.v1.logic.relationship.CreateGroupResponse.group:type_name -> api.v1.universal.Group
	75, // 8: api.v1.logic.relationship.GetGroupListResponse.groups:type_name -> api.v1.universal.Group
	75, // 9: api.v1.logic.relationship.GetGroupInfoResponse.group:type_name -> api.v1.universal.Group
	76, // 10: api.v1.logic.relationship.GetGroupMemberListResponse.group_members:type_name -> api.v1.universal.GroupMember
	76, // 11: api.v1.logic.relationship.GetGroupMemberInfoResponse.group_member:type_name -> api.v1.universal.GroupMember
	77, // 12: api.v1.logic.relationship.SendGroupRequestResponse.group_request:type_name -> api.v1.universal.GroupRequest
	77, // 13: api.v1.logic.relationship.GetGroupRequestListResponse.group_requests:type_name -> api.v1.universal.GroupRequest
	77, // 14: api.v1.logic.relationship.GetGroupRequestResponse.group_request:type_name -> api.v1.universal.GroupRequest
	77, // 15: api.v1.logic.relationship.GetGroupRequestsResponse.group_requests:type_name -> api.v1.universal.GroupRequest
	76, // 16: api.v1.logic.relationship.GetGroupAdminListResponse.group_admins:type_name -> api.v1.universal.GroupMember
	76, // 17: api.v1.logic.relationship.GetGroupAdminInfoResponse.group_admin:type_name -> api.v1.universal.GroupMember
	4,  // 18: api.v1.logic.relationship.relationShip.SendFriendRequest:input_type -> api.v1.logic.relationship.SendFriendRequestRequest
	6,  // 19: api.v1.logic.relationship.relationShip.GetFriendRequestList:input_type -> api.v1.logic.relationship.GetFriendRequestListRequest
	8,  // 20: api.v1.logic.relationship.relationShip.GetFriendRequest:input_type -> api.v1.logic.relationship.GetFriendRequestRequest
	10, // 21: api.v1.logic.relationship.relationShip.GetFriendRequests:input_type -> api.v1.logic.relationship.GetFriendRequestsRequest
	12, // 22: api.v1.logic.relationship.relationShip.DealFriendRequest:input_type -> api.v1.logic.relationship.DealFriendRequestRequest
	14, // 23: api.v1.logic.relationship.relationShip.GetFriendList:input_type -> api.v1.logic.relationship.GetFriendListRequest
	2,  // 24: api.v1.logic.relationship.relationShip.GetOneFriend:input_type -> api.v1.logic.relationship.GetOneFriendRequest
	0,  // 25: api.v1.logic.relationship.relationShip.GetFriendsByIDS:input_type -> api.v1.logic.relationship.GetFriendsByIDSRequest
	16, // 26: api.v1.logic.relationship.relationShip.DeleteFriend:input_type -> api.v1.logic.relationship.DeleteFriendRequest
	18, // 27: api.v1.logic.relationship.relationShip.GetFriendInfo:input_type -> api.v1.logic.relationship.GetFriendInfoRequest
	20, // 28: api.v1.logic.relationship.relationShip.UpdateFriendInfo:input_type -> api.v1.logic.relationship.UpdateFriendInfoRequest
	22, // 29: api.v1.logic.relationship.relationShip.CreateFriendGroup:input_type -> api.v1.logic.relationship.CreateFriendGroupRequest
	24, // 30: api.v1.logic.relationship.relationShip.UpdateFriendGroup:input_type -> api.v1.logic.relationship.UpdateFriendGroupRequest
	26, // 31: api.v1.logic.relationship.relationShip.DeleteFriendGroup:input_type -> api.v1.logic.relationship.DeleteFriendGroupRequest
	28, // 32: api.v1.logic.relationship.relationShip.GetFriendGroupList:input_type -> api.v1.logic.relationship.GetFriendGroupListRequest
	30, // 33: api.v1.logic.relationship.relationShip.CreateGroup:input_type -> api.v1.logic.relationship.CreateGroupRequest
	32, // 34: api.v1.logic.relationship.relationShip.GetGroupList:input_type -> api.v1.logic.relationship.GetGroupListRequest
	34, // 35: api.v1.logic.relationship.relationShip.GetGroupInfo:input_type -> api.v1.logic.relationship.GetGroupInfoRequest
	36, // 36: api.v1.logic.relationship.relationShip.UpdateGroupInfo:input_type -> api.v1.logic.relationship.UpdateGroupInfoRequest
	38, // 37: api.v1.logic.relationship.relationShip.DeleteGroup:input_type -> api.v1.logic.relationship.DeleteGroupRequest
	40, // 38: api.v1.logic.relationship.relationShip.GetGroupMemberList:input_type -> api.v1.logic.relationship.GetGroupMemberListRequest
	42, // 39: api.v1.logic.relationship.relationShip.GetGroupMemberInfo:input_type -> api.v1.logic.relationship.GetGroupMemberInfoRequest
	44, // 40: api.v1.logic.relationship.relationShip.UpdateGroupMemberInfo:input_type -> api.v1.logic.relationship.UpdateGroupMemberInfoRequest
	46, // 41: api.v1.logic.relationship.relationShip.DeleteGroupMember:input_type -> api.v1.logic.relationship.DeleteGroupMemberRequest
	48, // 42: api.v1.logic.relationship.relationShip.SendGroupRequest:input_type -> api.v1.logic.relationship.SendGroupRequestRequest
	50, // 43: api.v1.logic.relationship.relationShip.GetGroupRequestList:input_type -> api.v1.logic.relationship.GetGroupRequestListRequest
	52, // 44: api.v1.logic.relationship.relationShip.GetGroupRequest:input_type -> api.v1.logic.relationship.GetGroupRequestRequest
	54, // 45: api.v1.logic.relationship.relationShip.GetGroupRequests:input_type -> api.v1.logic.relationship.GetGroupRequestsRequest
	56, // 46: api.v1.logic.relationship.relationShip.DealGroupRequest:input_type -> api.v1.logic.relationship.DealGroupRequestRequest
	58, // 47: api.v1.logic.relationship.relationShip.CreateGroupAdmin:input_type -> api.v1.logic.relationship.CreateGroupAdminRequest
	60, // 48: api.v1.logic.relationship.relationShip.DeleteGroupAdmin:input_type -> api.v1.logic.relationship.DeleteGroupAdminRequest
	62, // 49: api.v1.logic.relationship.relationShip.GetGroupAdminList:input_type -> api.v1.logic.relationship.GetGroupAdminListRequest
	64, // 50: api.v1.logic.relationship.relationShip.GetGroupAdminInfo:input_type -> api.v1.logic.relationship.GetGroupAdminInfoRequest
	66, // 51: api.v1.logic.relationship.relationShip.CheckAdmin:input_type -> api.v1.logic.relationship.CheckAdminRequest
	69, // 52: api.v1.logic.relationship.relationShip.CheckLeader:input_type -> api.v1.logic.relationship.CheckLeaderRequest
	71, // 53: api.v1.logic.relationship.relationShip.CheckMember:input_type -> api.v1.logic.relationship.CheckMemberRequest
	5,  // 54: api.v1.logic.relationship.relationShip.SendFriendRequest:output_type -> api.v1.logic.relationship.SendFriendRequestResponse
	7,  // 55: api.v1.logic.relationship.relationShip.GetFriendRequestList:output_type -> api.v1.logic.relationship.GetFriendRequestListResponse
	9,  // 56: api.v1.logic.relationship.relationShip.GetFriendRequest:output_type -> api.v1.logic.relationship.GetFriendRequestResponse
	11, // 57: api.v1.logic.relationship.relationShip.GetFriendRequests:output_type -> api.v1.logic.relationship.GetFriendRequestsResponse
	13, // 58: api.v1.logic.relationship.relationShip.DealFriendRequest:output_type -> api.v1.logic.relationship.DealFriendRequestResponse
	15, // 59: api.v1.logic.relationship.relationShip.GetFriendList:output_type -> api.v1.logic.relationship.GetFriendListResponse
	3,  // 60: api.v1.logic.relationship.relationShip.GetOneFriend:output_type -> api.v1.logic.relationship.GetONeFriendResponse
	1,  // 61: api.v1.logic.relationship.relationShip.GetFriendsByIDS:output_type -> api.v1.logic.relationship.GetFriendsByIDSResponse
	17, // 62: api.v1.logic.relationship.relationShip.DeleteFriend:output_type -> api.v1.logic.relationship.DeleteFriendResponse
	19, // 63: api.v1.logic.relationship.relationShip.GetFriendInfo:output_type -> api.v1.logic.relationship.GetFriendInfoResponse
	21, // 64: api.v1.logic.relationship.relationShip.UpdateFriendInfo:output_type -> api.v1.logic.relationship.UpdateFriendInfoResponse
	23, // 65: api.v1.logic.relationship.relationShip.CreateFriendGroup:output_type -> api.v1.logic.relationship.CreateFriendGroupResponse
	25, // 66: api.v1.logic.relationship.relationShip.UpdateFriendGroup:output_type -> api.v1.logic.relationship.UpdateFriendGroupResponse
	27, // 67: api.v1.logic.relationship.relationShip.DeleteFriendGroup:output_type -> api.v1.logic.relationship.DeleteFriendGroupResponse
	29, // 68: api.v1.logic.relationship.relationShip.GetFriendGroupList:output_type -> api.v1.logic.relationship.GetFriendGroupListResponse
	31, // 69: api.v1.logic.relationship.relationShip.CreateGroup:output_type -> api.v1.logic.relationship.CreateGroupResponse
	33, // 70: api.v1.logic.relationship.relationShip.GetGroupList:output_type -> api.v1.logic.relationship.GetGroupListResponse
	35, // 71: api.v1.logic.relationship.relationShip.GetGroupInfo:output_type -> api.v1.logic.relationship.GetGroupInfoResponse
	37, // 72: api.v1.logic.relationship.relationShip.UpdateGroupInfo:output_type -> api.v1.logic.relationship.UpdateGroupInfoResponse
	39, // 73: api.v1.logic.relationship.relationShip.DeleteGroup:output_type -> api.v1.logic.relationship.DeleteGroupResponse
	41, // 74: api.v1.logic.relationship.relationShip.GetGroupMemberList:output_type -> api.v1.logic.relationship.GetGroupMemberListResponse
	43, // 75: api.v1.logic.relationship.relationShip.GetGroupMemberInfo:output_type -> api.v1.logic.relationship.GetGroupMemberInfoResponse
	45, // 76: api.v1.logic.relationship.relationShip.UpdateGroupMemberInfo:output_type -> api.v1.logic.relationship.UpdateGroupMemberInfoResponse
	47, // 77: api.v1.logic.relationship.relationShip.DeleteGroupMember:output_type -> api.v1.logic.relationship.DeleteGroupMemberResponse
	49, // 78: api.v1.logic.relationship.relationShip.SendGroupRequest:output_type -> api.v1.logic.relationship.SendGroupRequestResponse
	51, // 79: api.v1.logic.relationship.relationShip.GetGroupRequestList:output_type -> api.v1.logic.relationship.GetGroupRequestListResponse
	53, // 80: api.v1.logic.relationship.relationShip.GetGroupRequest:output_type -> api.v1.logic.relationship.GetGroupRequestResponse
	55, // 81: api.v1.logic.relationship.relationShip.GetGroupRequests:output_type -> api.v1.logic.relationship.GetGroupRequestsResponse
	57, // 82: api.v1.logic.relationship.relationShip.DealGroupRequest:output_type -> api.v1.logic.relationship.DealGroupRequestResponse
	59, // 83: api.v1.logic.relationship.relationShip.CreateGroupAdmin:output_type -> api.v1.logic.relationship.CreateGroupAdminResponse
	61, // 84: api.v1.logic.relationship.relationShip.DeleteGroupAdmin:output_type -> api.v1.logic.relationship.DeleteGroupAdminResponse
	63, // 85: api.v1.logic.relationship.relationShip.GetGroupAdminList:output_type -> api.v1.logic.relationship.GetGroupAdminListResponse
	65, // 86: api.v1.logic.relationship.relationShip.GetGroupAdminInfo:output_type -> api.v1.logic.relationship.GetGroupAdminInfoResponse
	67, // 87: api.v1.logic.relationship.relationShip.CheckAdmin:output_type -> api.v1.logic.relationship.CheckAdminResponse
	70, // 88: api.v1.logic.relationship.relationShip.CheckLeader:output_type -> api.v1.logic.relationship.CheckLeaderResponse
	72, // 89: api.v1.logic.relationship.relationShip.CheckMember:output_type -> api.v1.logic.relationship.CheckMemberResponse
	54, // [54:90] is the sub-list for method output_type
	18, // [18:54] is the sub-list for method input_type
	18, // [18:18] is the sub-list for extension type_name
	18, // [18:18] is the sub-list for extension extendee
	0,  // [0:18] is the sub-list for field type_name
}

func init() { file_v1_relationship_relationship_proto_init() }
func file_v1_relationship_relationship_proto_init() {
	if File_v1_relationship_relationship_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_v1_relationship_relationship_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFriendsByIDSRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_relationship_relationship_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFriendsByIDSResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_relationship_relationship_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOneFriendRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_relationship_relationship_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetONeFriendResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_relationship_relationship_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendFriendRequestRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_relationship_relationship_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendFriendRequestResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_relationship_relationship_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFriendRequestListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_relationship_relationship_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFriendRequestListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_relationship_relationship_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFriendRequestRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_relationship_relationship_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFriendRequestResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_relationship_relationship_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFriendRequestsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_relationship_relationship_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFriendRequestsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_relationship_relationship_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DealFriendRequestRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_relationship_relationship_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DealFriendRequestResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_relationship_relationship_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFriendListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_relationship_relationship_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFriendListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_relationship_relationship_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteFriendRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_relationship_relationship_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteFriendResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_relationship_relationship_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFriendInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_relationship_relationship_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFriendInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_relationship_relationship_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateFriendInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_relationship_relationship_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateFriendInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_relationship_relationship_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateFriendGroupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_relationship_relationship_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateFriendGroupResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_relationship_relationship_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateFriendGroupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_relationship_relationship_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateFriendGroupResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_relationship_relationship_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteFriendGroupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_relationship_relationship_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteFriendGroupResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_relationship_relationship_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFriendGroupListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_relationship_relationship_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFriendGroupListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_relationship_relationship_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateGroupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_relationship_relationship_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateGroupResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_relationship_relationship_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGroupListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_relationship_relationship_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGroupListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_relationship_relationship_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGroupInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_relationship_relationship_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGroupInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_relationship_relationship_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateGroupInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_relationship_relationship_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateGroupInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_relationship_relationship_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteGroupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_relationship_relationship_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteGroupResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_relationship_relationship_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGroupMemberListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_relationship_relationship_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGroupMemberListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_relationship_relationship_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGroupMemberInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_relationship_relationship_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGroupMemberInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_relationship_relationship_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateGroupMemberInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_relationship_relationship_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateGroupMemberInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_relationship_relationship_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteGroupMemberRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_relationship_relationship_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteGroupMemberResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_relationship_relationship_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendGroupRequestRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_relationship_relationship_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendGroupRequestResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_relationship_relationship_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGroupRequestListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_relationship_relationship_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGroupRequestListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_relationship_relationship_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGroupRequestRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_relationship_relationship_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGroupRequestResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_relationship_relationship_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGroupRequestsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_relationship_relationship_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGroupRequestsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_relationship_relationship_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DealGroupRequestRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_relationship_relationship_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DealGroupRequestResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_relationship_relationship_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateGroupAdminRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_relationship_relationship_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateGroupAdminResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_relationship_relationship_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteGroupAdminRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_relationship_relationship_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteGroupAdminResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_relationship_relationship_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGroupAdminListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_relationship_relationship_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGroupAdminListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_relationship_relationship_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGroupAdminInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_relationship_relationship_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGroupAdminInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_relationship_relationship_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckAdminRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_relationship_relationship_proto_msgTypes[67].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckAdminResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_relationship_relationship_proto_msgTypes[68].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGroupMemberRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_relationship_relationship_proto_msgTypes[69].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckLeaderRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_relationship_relationship_proto_msgTypes[70].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckLeaderResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_relationship_relationship_proto_msgTypes[71].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckMemberRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_relationship_relationship_proto_msgTypes[72].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckMemberResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_v1_relationship_relationship_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   73,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_v1_relationship_relationship_proto_goTypes,
		DependencyIndexes: file_v1_relationship_relationship_proto_depIdxs,
		MessageInfos:      file_v1_relationship_relationship_proto_msgTypes,
	}.Build()
	File_v1_relationship_relationship_proto = out.File
	file_v1_relationship_relationship_proto_rawDesc = nil
	file_v1_relationship_relationship_proto_goTypes = nil
	file_v1_relationship_relationship_proto_depIdxs = nil
}
